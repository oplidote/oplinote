{"version":3,"file":"js/app.c744ad62.js","mappings":"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","sources":["webpack://blog/./src/posts/post1.md","webpack://blog/./src/posts/post10.md","webpack://blog/./src/posts/post11.md","webpack://blog/./src/posts/post12.md","webpack://blog/./src/posts/post13.md","webpack://blog/./src/posts/post14.md","webpack://blog/./src/posts/post15.md","webpack://blog/./src/posts/post16.md","webpack://blog/./src/posts/post17.md","webpack://blog/./src/posts/post18.md","webpack://blog/./src/posts/post19.md","webpack://blog/./src/posts/post2.md","webpack://blog/./src/posts/post20.md","webpack://blog/./src/posts/post21.md","webpack://blog/./src/posts/post22.md","webpack://blog/./src/posts/post23.md","webpack://blog/./src/posts/post3.md","webpack://blog/./src/posts/post4.md","webpack://blog/./src/posts/post5.md","webpack://blog/./src/posts/post6.md","webpack://blog/./src/posts/post7.md","webpack://blog/./src/posts/post8.md","webpack://blog/./src/posts/post9.md","webpack://blog/./src/App.vue","webpack://blog/./src/services/Snakke.ts","webpack://blog/./src/components/SnakkeLib.vue","webpack://blog/./src/components/SnakkeLib.vue?5cd9","webpack://blog/./src/App.vue?7ccd","webpack://blog/./src/components/ListView.vue","webpack://blog/./src/components/ListView.vue?a6c3","webpack://blog/./src/components/CreatePost.vue","webpack://blog/./src/components/CreatePost.vue?13ff","webpack://blog/./src/components/PostView.vue","webpack://blog/./src/components/PostView.vue?f9c5","webpack://blog/./src/router/index.js","webpack://blog/./src/store/index.js","webpack://blog/./src/main.js","webpack://blog/ ^\\.\\/post.*\\.md$","webpack://blog/webpack/bootstrap","webpack://blog/webpack/runtime/chunk loaded","webpack://blog/webpack/runtime/compat get default export","webpack://blog/webpack/runtime/define property getters","webpack://blog/webpack/runtime/global","webpack://blog/webpack/runtime/hasOwnProperty shorthand","webpack://blog/webpack/runtime/make namespace object","webpack://blog/webpack/runtime/node module decorator","webpack://blog/webpack/runtime/jsonp chunk loading","webpack://blog/webpack/startup"],"sourcesContent":["export default \"## 안녕하세요 ! \\n- 프론트엔드 공부 중인 __진현우__ 라고 합니다. 🌱\\n- 현재 __vue.js__ 프레임워크를 이용해 블로그를 제작하고 있습니다.\\n- 아직 여러가지 부족한 점이 많지만 개발에 대한 기록을 위해, 또 나아가 누군가에게는 여러가지 정보를 제공할 수 있도록 밤 낮으로 공부하고 있습니다.\\n- 연락처는 홈페이지 하단 메뉴(footer)를 통해 확인하실 수 있습니다.\\n- 어떠한 피드백도 환영하고 감사히 받겠습니다. \\n- 오늘도 좋은 하루 되세요 ! 🙇‍♂️\\n\\n\";","export default \"## 서버 mongoDB 맛보기\\n``` javascript\\n// 파일(index.html) 열어준다.\\nvar fs = require('fs')\\n// express\\nvar express = require('express');\\n// 변수명을 app 사용하더라\\nvar app = express();\\n// mongoDB 관련\\nvar MongoClient = require('mongodb').MongoClient;\\nvar mongoUrl = 'mongodb://localhost:27017';\\n// 메모리 누수 방지를 위해 db \\n\\nfunction connMongo(){\\n    // DB 접속해서 데이터베이스를 연결한다.\\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;// 파일(index.html) 열어준다.\\nvar fs = require('fs')\\n// express\\nvar express = require('express');\\n// 변수명을 app 사용하더라\\nvar app = express();\\n// mongoDB 관련\\nvar MongoClient = require('mongodb').MongoClient;\\nvar mongoUrl = 'mongodb://localhost:27017';\\nvar mongo;\\n\\nfunction connMongo(){\\n    // DB 접속해서 데이터베이스를 연결한다.\\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        console.log(mongoUrl + \\\"연결되었다\\\");\\n        mongo = db.db('firstdb');\\n    });\\n}\\n\\n// fourthcol 컬렉션의 전체 내용 출력\\napp.get('/col', function(request, response){\\n\\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        mongo.collection('fourthcol').find({}).toArray(function(err, result){\\n            if(err) throw err;\\n            response.send(result);\\n            return;\\n        });\\n    })\\n});\\n\\n// fourthcol 컬렉션의 내용 1개 추가\\n//localhost/insert?name=Park&height=180&depart=Front\\napp.get('/insert', function(request, response){\\n    console.log(request);\\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        mongo.collection('fourthcol').insertOne(\\n            request.query, function(err, result){\\n                if(err) throw err;\\n                response.send(result);\\n                return;\\n            }\\n        );\\n    })\\n});\\n\\n// app 에서 get 요청을 한다.\\napp.get('/', function(request, response){\\n    fs.readFile('index.html', function(err, data){\\n        response.writeHead(200, {'Content-Type': 'text/html'});\\n        response.end(data);\\n        console.log('Home');\\n    });\\n});\\n\\napp.listen(80, function(){\\n    console.log('사용중인 포트는 80번입니다');\\n    connMongo();\\n});\\n\\n\\n        console.log(mongoUrl + \\\"연결되었다\\\");\\n    });\\n}\\n\\n// fourthcol 컬렉션의 전체 내용 출력\\napp.get('/col', function(request, response){\\n    \\n    \\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        // 메모리 누수 방지를 위해 사용 중인 데이터베이스는 필요할 때 연결하고\\n        // 사용 후에는 close 해준다.\\n        var mongo = \\\"firstDB\\\"\\n        mongo.collection('fourthcol').find({}).toArray(function(err, result){\\n            if(err) throw err;\\n            response.send(result);\\n            return;\\n        });\\n    })\\n});\\n\\n// fourthcol 컬렉션의 내용 1개 추가\\n//localhost/insert?name=Park&height=180&depart=Front\\napp.get('/insert', function(request, response){\\n    console.log(request);\\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        // 메모리 누수 방지를 위해 사용 중인 데이터베이스는 필요할 때 연결하고\\n        // 사용 후에는 close 해준다.\\n        var mongo = \\\"firstDB\\\"\\n        mongo.collection('fourthcol').insertOne(\\n            request.query, function(err, result){\\n                if(err) throw err;\\n                response.send(result);\\n                return;\\n            }\\n        );\\n    })\\n});\\n// fourthcol 컬렉션의 내용 1개 수정\\n//localhost/update?name=Park&height=100&depart=Back\\napp.get('/update', function(request, response){    \\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        // 메모리 누수 방지를 위해 사용 중인 데이터베이스는 필요할 때 연결하고\\n        // 사용 후에는 close 해준다.\\n        var mongo = \\\"firstDB\\\"\\n        mongo.collection('fourthcol').updateMany(\\n            {\\\"name\\\": request.query.name},\\n            {$set:request.query},\\n            request.query, function(err, result){\\n                if(err) throw err;\\n                response.send(result);\\n                return;\\n            }\\n        );\\n    })\\n});\\n// fourthcol 컬렉션의 내용 1개 삭제\\n//localhost/delete?name=Park\\napp.get('/delete', function(request, response){    \\n    MongoClient.connect(mongoUrl, function(err, db){\\n        if(err) throw err;\\n        // 메모리 누수 방지를 위해 사용 중인 데이터베이스는 필요할 때 연결하고\\n        // 사용 후에는 close 해준다.\\n        var mongo = \\\"firstDB\\\"\\n        mongo.collection('fourthcol').deleteOne(\\n            {\\\"name\\\": request.query.name},\\n            request.query, function(err, result){\\n                if(err) throw err;\\n                response.send(result);\\n                return;\\n            }\\n        );\\n    })\\n});\\n// app 에서 get 요청을 한다.\\napp.get('/', function(request, response){\\n    fs.readFile('index.html', function(err, data){\\n        response.writeHead(200, {'Content-Type': 'text/html'});\\n        response.end(data);\\n        console.log('Home');\\n    });\\n});\\n\\napp.listen(80, function(){\\n    console.log('사용중인 포트는 80번입니다');\\n    connMongo();\\n});\\n\\n```\";","export default \"제작 중인 블로그 사이트의 반응형과 다크모드 작업을 마쳤다. 작업에 관한 내용을 간단하게 기록해보려 한다.\\n## 반응형\\n### 작업순서\\n- 반응형 작업 전 우선 PC 버전으로 `css` 작업을 했다.\\n- `css` 작업 후 브라우저 창 크기를 줄이며 사이트가 __어떻게 어디서__ 깨지는 지 확인 후 3의 배수로 반응형 작업할 해상도를 잡았다. (1024 / 768 / 640 / 540 / 420 / 360)\\n- 기본으로 작성된 PC버전 코드 이 후부터 아래처럼 높은 해상도 부터 차례로 반응형 작업했다.\\n\\n``` css\\n@media all and (max-width : 1024px) {}\\n@media all and (max-width : 768px) {}\\n@media all and (max-width : 640px) {}\\n@media all and (max-width : 540px) {}\\n@media all and (max-width : 420px) {}\\n@media all and (max-width : 360px) {}\\n```\\n\\n### 반응형 후기\\n>반응형 작업은 언제나 시간이 많이 든다. 그래도 매번 __'조금만 더 가성비 있게 작성해보자'__ 라는 마음으로 작업하다보니 돌아보니 시간도 시간이지만 코드도 좀 더 짧아진 것 같다. 모든 작업물이 그랬지만 역시 보면 볼수록 불편한 게 자꾸 생겨서 그만 봐야겠다.ㅋㅋ\\n\\n## 다크모드\\n\\n- `mode` 라는 클래스의 버튼에 클릭이벤트를 달아주었다.\\n``` html\\n<button class=\\\"mode\\\" @click=\\\"modeChange\\\"></button>\\n```\\n- body에 클래스를 토글하는 방식으로 구현했다.\\n``` js\\nconst modeChange = () => {\\n      $('body').toggleClass('light');\\n    }\\n```\\n- 그리고 `body` 시맨틱 태그와 `light` 클래스를 동시 보유한 태그에 속성을 부여하도록 코드를 작성했다.\\n``` css\\nbody.light {\\n\\t// 라이트모드 관련 코드\\n}\\n```\\n\\n### 다크모드 후기\\n>반응형과 달리 `color` 와 `background-color`  을 변경하는 작업이 대부분이라 계층 구조로 작업하지않고 색상별로 묶어서 `!important` 로 작업했다.\\n색상변수도 고려했으나 결국 변하는 부분에 대한 코드는 일일히 다 작성해주어야 해서 변수로 사용하지 않았다.\\n나름 코드를 최소화했지만 생각보다 내가 무책임하게 색상을 꽤나 다양하게 사용했다.ㅋㅋ 디자인도 잘 모르면서 예쁘게는 꾸미고 싶고 고민하다보니 시간은 시간대로 쏟고 코드는 코드대로 길어져있었다. 사실 클론코딩이 아닌 새로운 사이트를 몇 번 만들다보니 어느 순간 디자인을 점점 싫어하고 있었다.쨌든 하나만 하자. 디자이너분들 존경합니다..!\";","export default \"## 작성동기\\n최근 블로그에 firebase를 이용해 DB연동 작업을 진행하려 했다.\\n근데 하나부터 열가지 모르는 내용이라 너무 어려웠다. 난이도가 낮은 편임에도 `firebase init` 은 뭐하는 명령어고 옵션은 왜 이걸 고르는 지 모르니 각기 다른 환경의 설정방법을 내 블로그 환경에 응용하기엔 더더욱 무리였다. 물론 firebase가 다른 것들에 비해 난이도가 낮다고 하지만 아직 FE를 공부하는 게 맞다고 생각했다.\\n그래서 블로그는 하던 대로 로컬에서 마크다운 파일로 계속 작성할 것이고 FE에 대한 공부를 하나하나씩 해보려 한다.\\n\\n## 앞서\\n웹 개발은 트렌드가 빠르게 바뀐다고 한다.\\n공부 중인 프론트엔드 분야는 백엔드에 비해 더 빠르다고 들었다.\\n그렇기 때문에 개발지식과 언어 역시 최신 동향에 맞추어 영리하게 공부해야 할 것이다.\\nkamranahmedse 라는 외국 개발자 분께서 제공해주신 로드맵 이미지의 번역본을 가져왔다.\\n앞으로 내가 가야할 길과 어떤 공부를 해야할 지 자세히 적혀있었다.\\n\\n\\n## 2022 웹 프론트엔드 개발 로드맵\\n![로드맵이미지](/oplinote/img/fe_roadmap.150db9d3.png)\";","export default \"## 문서 객체 모델 (Document Object Model)\\n__문서 객체 모델 (Document Object Model 이하 DOM) 은 브라우저에서 `javscript`로 `html` 요소를 제어할 수 있도록 제공하는 api 이다.__\\n\\n>`javascript` 는 `html` 문서를 조작하기 위한 언어이다.\\n`html`문서를  `javascript` 가 조작할 수 있는 이유는\\n브라우저 안 렌더링 엔진이 존재 해당 엔진이 html 문서를 한줄 한줄 읽은 후 \\n객체화 시켜서 `javascript`가 접근할 수 있도록 하기 때문이다.\\n`Dom` 은 Tree 구조를 지니고 있다. (Domtree)\\n\\n## 브라우저 객체 모델(Browser Object Model)\\n브라우저 자체를 제어할 수 있도록 모델링한 것이다.\\n\\n### CSS Object Model\\ncss를 javscript 로 제어할 수 있도록 한 것\\n\\n\\n### document?\\n`domtree`의 최상위 노드\\n\\n\";","export default \"## fetch 이해하기\\n클라이언트와 서버가 통신할 때 클라이언트는 fetch() 함수로 요청한다.\\n서버는 요청에 맞는 데이터를 제공해준다.\\n응답에는 시간이 걸릴 수 있는 데 그 동안 클라이언트가 아무 것도 하지않으면 비효율적일 것이다. 그것을 위한 함수가 .then() 이다.\\n.then() 은 웹 브라우저가 서버로부터 응답 받는 것이 끝나면 호출된다.\\nfetch() 의 실행되고 완료여부와 상관없이 다음 코드가 진행된다.\\n이를 비동기적 실행, 실행을 끝마친 후에 다음 코드가 실행되는 것을 동기적인 실행이라고 한다.\\nthen을 비롯한 이를 비동기 함수(Asynchronous)라고 한다.\\n\\n\\n``` js\\nfunction callbackme() {\\n  console.log(\\\"response end\\\");\\n}\\nfetch(\\\"api\\\").then(callbackme();\\nconsole.log(\\\"1\\\");\\nconsole.log(\\\"2\\\");\\n\\n// console\\n> 1\\n> 2\\n> response end\\n```\\n.then() 이 console.log 보다 위에 작성되어 있지만 마지막에 실행되는 것을 볼 수 있다.\\n\\n- fetch(API주소,옵션)로 사용되며 API주소와 옵션을 인자로 사용한다.\\n- 옵션은 필수 인자가 아니다.\\n- promise 타입의 객체를 반환한다.\";","export default \"게시글의 태그가 카테고리 목록에 없는 태그일 경우 '기타' 카테고리로 분류되도록 하는 코드를 작성해야한다.\\n특정 문자를 찾아내 해당 문자의 index를 반환하는 __indexOf()__ 로 구현했다.\\n목록에 없는 경우 -1 를 반환하도록 되어있는 특징을 이용했다.\\n\\n``` js\\n// 다섯 종류의 카테고리가 담긴 배열 cateList\\nconst cateList = ['html','css','js','vue','etc'];\\n// 게시글의 태그를 통해 게시글의 카테고리를 분류하는 함수 cateSort()\\nconst cateSort = (_c) => {\\n  // 게시글의 태그가 카테고리목록에 존재하지 않을 시\\n  // 게시글의 태그를 기타('etc')로 변경 후 진행\\n  if (cateList.indexOf(_c) == -1) _c = 'etc';\\n  // indexOf 는 해당 인자가 목록에 존재하지 않을 시\\n  // -1 를 반환하도록 되어있다.\\n\\n  // 게시글의 태그와 사용자가 선택한 카테고리(props.cate)가 \\n  // 일치하면 true를 반환하여 해당 글을 보여 줌\\n  if (props.cate == _c) {\\n    return true;\\n  } \\n  // 사용자가 카테고리를 선택하지 않은 경우\\n  // 태그와 상관없이 true를 반환하여 모든 글을 보여줌\\n  else if (props.cate == \\\"\\\") {\\n    return true;\\n  }\\n};\\n```\\n\\n\";","export default \"## 앞서\\n흔히 보게 되는 `jpg` `png` `gif` `BMP`와 같은 것들은 이미지를 디지털 공간에 표현하기 위해 사용하는 확장자로 이를 __이미지 파일 형식(image file format)__ 라고 한다. 이들은 용량과 화질, 색상 표현의 다양성, 압축방식, 호환성 등 제 각각의 특성을 가지고 있다. 그렇기 때문에 같은 이미지임에도 표현된 파일형식에 따라 차이가 발생한다.\\n\\n## SVG(Scalable Vector Graphics)란?\\n\\n### 사전적 정의\\n> __SVG__ 는 W3C(?) 가 개발한 개방형 표준으로, 2차원 벡터 그래픽의 표현을 위한 __XML(?)__ 마크업 언어 이다. 웹 등에서 스크립트가 가능한 다목적 벡터 포맷의 필요를 위해 제작된 것으로, W3C 표준인 `CSS`, `DOM`, `SMIL` 과 호환된다. 확대나 축소를 해도 픽셀이 깨지지 않고 화질이 유지되며 용량이 `PNG`,`GIF` 보다 적다. 중첩된 경로, 알파 마스크, 애니메이션, 다양한 그래픽 명령어, 하이퍼링크 등의 기능을 지원한다. __SVG__ 파일형식은 어도비 일러스트레이터 등의 벡터 드로잉 프로그램이나 메모장, 문서 편집기 등에서도 작업할 수 있다.\\n\\n- W3C : 월드 와이드 웹을 위한 표준을 개발하고 장려하는 조직\\n- XML(Extensible Markup Language) : W3C에서 개발된, 다른 특수한 목적을 갖는 마크업 언어\\n\\n역시 \\\"사전\\\"적 정의 답게 생소한 단어가 많아 이해하기가 힘들다.\\n\\n## 레스터(Raster) 와 벡터 (Vector)\\n__레스터__ 방식으로 표현으로 표현하는 `JPG`, `PNG`, `GIF`, `BMP` 와 달리 \\n`SVG` 는 __벡터화__된 그래픽 이미지 이다. \\n레스터? 벡터? 는 무엇이며 둘의 차이에 대해 알아보자.\\n\\n### 레스터(Raster) 방식이란?\\n> __레스터 방식__은 이미지의 모양과 색을 색상정보가 담긴 __픽셀(pixel)__ 로 표현하는 방식이다. (.jpg / .png / .gif)\\n\\n#### 특징\\n- 각각의 픽셀에 색을 입히고, 그 작은 픽셀을 하나로 모아서 그림과 선을 표현한다.\\n- 픽셀을 이용하는 만큼 자연스러운 이미지를 표현할 수 있지만 확대할 경우 \\n그림이 모자이크처럼 깨져보이는 현상(계단식현상)이 나타난다.\\n- 픽셀의 수가 많아질 수록 파일의 크기가 __커진다.__\\n\\n### 벡터(Vector) 란?\\n> 수학적 함수를 이용하여 도형이나 선을 그려서 표현하는 방식이다. (.svg)\\n\\n#### 특징\\n- 확대를 하더라도 계단식 현상이 일어나지 않고 __선명함__ 을 유지하고, 이로 인해 __CI, BI 로고__ 및 __홍보물,인쇄물__ 을 표현하는데 적절하다.\\n- 레스터 방식에 비해 용량이 __적은 편__ 이다.\\n- 반면, 색상의 __자연스러운 변화__ 나 __세밀한 표현__ 이 __어렵다.__\\n- __색 표현의 한계__ 가 있고 수학적 계산이 필요하기 때문에 이미지가 복잡할수록 __로딩 시간__ 이 오래 걸린다.\\n\";","export default \"# API ?\\n\\n__API(Application Programming Interface)__ 는 어플리케이션 소프트웨어를 구축하고 통합하는 정의 및 프로토콜 세트이다. 때때로 API는 정보 제공자와 정보 사용자 간의 계약으로 지칭되며 소비자에게 필요한 콘텐츠(호출)와 생산자에게 필요한 콘텐츠(응답)를 구성한다.\\n~~...네?ㅋㅋ~~\\n# API의 역할은 ?\\n__API는 서버와 데이터베이스에 대한 출입구 역할을 한다__\\nAPI는 모든 사람들이 데이터베이스에 접근하는 것을 방지하기 위해 서버와 데이터베이스에 대한 출입구 역할을 하고 허용된 사용자에게 접근성을 부여해준다.\\n__API는 애플리케이션과 기기가 원활하게 통신할 수 있도록 한다__\\n애플리케이션(스마트폰의 어플 or 프로그램을 의미)과 기기가 데이터를 원활하게 주고받을 수 있게 돕는 역할을 한다.\\n__API는 모든 접속을 표준화한다.__\\n기기나 운영체제와 상관없이 누구나 동일한 액세스를 얻을 수 있다.API는 범용 플러그처럼 작동한다고 볼 수 있다. \\n(호환성에 영향을 받지 않는다라고 이해하면되나..?)\\n\\n# API의 유형은 ?\\n### private API\\n>private API는 내부 API로, 회사 개발자가 자사품과 서비스 개선을 위해 내부적으로 발행한 것 3자에게 노출되지 않는다. (이름 그대로 private)\\n\\n### public API\\n>public API는 개방형 API로, 모두에게 공개된다. 누구나 제한 없이 API를 사용할 수 있다. (open API라고도 하는 것 같다!)\\n\\n### partner API\\n>partner API는 기업이 데이터 공유에 동의하는 특정인들만 사용할 수 있다. 비즈니스 관계에서 사용되는 편이고, 종종 파트너 회사 간 소프트웨어를 통합하기 위해 사용된다.\\n\\n## 유형에 대한 개인적인 생각\\n__youtube__ 나 __instagram__ 을 비롯한 커뮤니티나 SNS 에 업로드된 __게시물의 공개범위__ 와 비유할 수 있었다.\\n\\n- __public API__ : 전체 공개 (모두가 볼 수 있음)\\n- __partner API__ : 일부 공개 (링크가 있는 사용자만)\\n- __private API__ : 비공개 (모두가 볼 수 없음)\\n\\n# API를 사용하는 이유\\n__private API__ 를 사용할 경우 개발자들이 애플리케이션 코드를 작성하는 방법을 표준화함으로써 간소화되고 빠른 프로세스를 처리할 수 있다.\\n소프트 웨어를 통합할 경우 개발자들 간의 협업을 용이하게 만들어 줄 수 있다.\\n__public API, partner API__ 를 사용하면 기업의 경우 타사 데이터를 활용하여 브랜드 인지도를 높일 수 있고 고객 데이터베이스를 확장하여 전환율을 높일 수도 있다.\\n\\n- 협업에서의 용이함\\n- 코드 작성 표준화로 인한 간소화와 빠른 프로세스 처리\\n- 다양한 데이터베이스의 활용\\n\\n_코드 작성 표준화로 인한 간소화가 잘 와닿지 않는다. 활용 예시를 참고하면 이해할 수 있을 것 같다._\\n\\n# 개념에 대해 오해할 수 있는 부분\\n\\n- 제공 받는 개발자가 직접 구현의 여부는 API의 정의와 관련없다.\\n- 다른 사람이 편하게 사용할 수 있게 만든 것이라는 말 또한 API를 정의하는 것에는 관련 없다.\\n- __API__ 를 제공한다는 것은 해당 기능을 제공해주는 개발자들이 편하게 설명하기 위해 함축해서 무엇무엇 API라고 하는 것 뿐 엄밀히 말하자면 API의 개념이 아니다.\\n- __API__ 는 __프로그램과 프로그램을 이어주는 매개체__ 그 자체의 의미를 가지며 가장 가까운 개념은 __연결통로__ 라고 볼 수 있다.\\n_ex) \\\"네이버에서 맵 API를 제공한다.\\\"_\\n\\n>네이버 서버에 있는 맵 기능을 다른 사용자들이 사용할 수 있게 만든 통로(API)를 제공한다는 뜻\\nAPI 를 통해 네이버 맵기능을 여러 사람들이 사용할 수 있게 프로그래밍하여 제공한다라고도 할 수 있다.\\n\\n# 마치며\\nAPI 개념에 대해 공부한 것을 기록했다. 정리하자면 API는 정말 쉽게는 __프로그램과 프로그램을 이어주는 연결통로__ 라 설명할 수 있을 것 같다. 하지만 통로에도 입출구가 존재할 것이고 입출구의 접근성에 대한 이해는 활용 예시를 꼭 참고해야 할 것 같다. 프론트엔드 공부를 하며 항상 나를 괴롭혔던 API ~~그놈의 API API..~~ 에 대해 어느정도 감이 잡혔고 후련하고 기분이 좋다.\";","export default \"## 앞서\\n개발 관련 유튜브나 글을 보면 아키텍처라는 용어가 자주 등장한다. 개발이 아니라도 한번쯤은 들어본 용어일 것이다. 들을 당시에는 이야기의 흐름이나 뉘앙스로 짐작만 할 뿐 정의는 알지 못했다. 그래서 아키텍처가 무엇인지 알아보았다.\\n\\n# 아키텍처란?\\n## 사전적 정의\\n>구성 요소들간의 관계,환경,설계와 발전을 관리하는 원칙으로 이루어진 시스템의 근본적인 구조\\n### 소프트웨어 아키텍처\\n>주요 컴포넌트 사이의 인터페이스와 인터랙션을 포함한 시스템 구조의 설계 유형\\n\\n### 아키텍처 설계\\n>개발 중인 시스템에 대한 아키텍처를 정하는 의사 결정 과정\\n\\n### 컴포넌트\\n>명백한 역할을 가지고 있으며 독립적으로 존재할 수 있는 시스템의 부분 (같은 기능을 함에 한해서 다른 컴포넌트로 대체가 가능하다.)\\n\\n### 모듈\\n>프로그래밍 언어의 문법 구조에서 정의된 컴포넌트\\n_ex) Java : method class package_\\n\\n_해당 [링크](https://luv-n-interest.tistory.com/394) 를 참고하여 작성하였습니다._\\n\\n\\n\\n## 아키텍처의 중요성\\n소프트웨어 거장인 __마틴 파울러__ 의 아키텍처 관련 연설도 여러번 정독했지만 아키텍처를 추상적으로 이해한 사람들을 대상으로 한 연설이라 내용을 이해하기는 힘들었다. 하지만 __아키텍처의 중요성__ 에 대한 내용은 여러가지 구조체의 개념을 포괄하는 내용이라 어느정도 이해할 수 있었다. 똑같은 기능을 가진 소프트웨어 중에서도 100달러를 추가해서라도 내부적으로 더 좋은 품질의 소프트웨어를 선택해야 하는 이유를 설명했다. 기능의 고도화에 따라 기존의 소스코드를 바꾸는 데 시간이 점차 오래걸린다는 내용이다. 이를 __디자인 스태미너 가설 (Design Stamina Hypothesis)__ 이라고 했다. 정리하자면 __시스템 디자인__ 과 __아키텍처__ 에 대해 고려하지 않으면 업데이트나 유지보수에 있어서 많은 시간이 투자되는 비효율적인 상황을 경험하게 된다는 것이다.\\n[마틴 파울러 연설 영상 링크](https://youtu.be/DngAZyWMGR0)\\n\\n## 마치며\\n\\n여러가지 좋은 자료들을 보았지만 __아키텍처__ 에 대해 컴포넌트를 포함한 전체적인 시스템의 구조(?), 좋은 아키텍처란 지속적인 업데이트와 유지보수가 고려된 체계적인 설계정도로 추상적으로 밖에 이해할 수 없었다. 하지만 아키텍처 설계 뿐만 아니라 프로그래밍에 있어서 좀 더 미래지향적인 사고를 해야 한다고 생각했다. 앞으로 다른 공부를 하거나 프로젝트를 경험하며 __아키텍처__ 에 대한 두루뭉실한 개념이 좀 더 명확하게 정의되었으면 좋겠다.\\n\\n\\n_+ 아키텍처의 이해를 위한 도움 혹은 그 외의 피드백을 주실 분께서는 페이지 하단을 통해 연락하실 수 있습니다. 감사히 받겠습니다._\";","export default \"이틀 전 __API__ 의 개념에 대해 공부했다. 정확한 개념에 대해 이해가지 않는 부분이 있었고 그 부분은 API를 직접 핸들링하면서 해소될 것이라 생각했다. 그래서 날씨정보에 대한 오픈 API를 사용하여 간단한 날씨 검색기를 만들어보았다.\\n\\n## API 제공받기\\nhttps://openweathermap.org/\\n- 사이트 접속 후 __회원가입__ 및 __로그인__ \\n- __API__ 카테고리 선택 후 필요한 정보에 대한 __API doc__ 선택\\n- __API call__ 에 기재된 url로 부터 API를 제공 받을 수 있다.\\n- 사용하기 전 로그인 키가 필요하므로 사이트 우측 상단 마이페이지에서 My API keys 로 이동 후 Key 복사\\n- Key 코드를 데이터 요청 시 기재해준다.\\n\\n\\n## 데이터 요청을 위한 코드 작성\\n~~~ js\\n// 검색 지역 입력 후 버튼 클릭 시 goSearch 함수로 진입한다\\nconst goSearch = () => {\\n    // 입력 값 city : 도시명으로 전달받는다. ex)서울 / 부산 / 의정부 등\\n      let city = document.getElementById(\\\"city\\\").value;\\n\\n      if (!city) {\\n        // 입력값이 없을 시 경고문 출력 후 리턴\\n        alert(\\\"검색어를 입력해주세요 !\\\");\\n        return;\\n      } else {\\n        let key = \\\"*****************\\\";\\n        // API call 에 기재된 url (q = 도시명 / appid = 로그인 키 코드 / units = 기온정보를 화씨가 아닌 섭씨로 요청)\\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${key}&units=metric`;\\n        fetch(url)\\n          .then((res) => {\\n            // 상태코드 200 정상적으로 응답 시 전달 받은 json 데이터 반환\\n            if (res.status === 200) {\\n              showResult.value = true;\\n              return res.json();\\n            } else {\\n            // 정상적인 결과값을 응답 받지 못한 경우\\n              console.error(`HTTP error! status: ${res.status}`);\\n              alert(\\n                \\\"검색에 실패했습니다.조회가 되지 않을 시 지역명을 영문으로 재검색해보세요.\\\"\\n              );\\n            }\\n          })\\n          .then((jsonData) => {\\n            // id = \\\"temp\\\" 태그에 기온 정보 innerHTML 로 밀어넣기\\n            temp.innerHTML = `약 ${jsonData.main.temp.toFixed(1)} ℃`;\\n            // 습도 정보 innerHTML 로 밀어넣기\\n            humidity.innerHTML = `약 ${jsonData.main.humidity.toFixed(1)} %`;\\n            // 체감온도 정보 innerHTML 로 밀어넣기\\n            feel_temp.innerHTML = `약 ${jsonData.main.feels_like.toFixed(1)} ℃`;\\n            // 날씨 정보 innerHTML 로 밀어넣기\\n            weather.innerHTML = `${jsonData.weather[0].main}`;\\n          })\\n          .catch((err) => {\\n            console.log(err);\\n          });\\n      }\\n    };\\n~~~\\n\\n## 결과\\n- fetch 를 이용하여 데이터를 읽기만을 위해 GET 방식으로 서버에게 데이터를 요청했다.\\n- 전달한 도시명에 해당하는 날씨에 관한 다양한 정보가 담긴 배열을 전달받았다.\\n\\n# 마치며\\n생각보다 API를 통해 서버로부터 정보를 받는 것 자체는 어렵지 않았다. 하지만 오픈 API가 아닌 경우 혹은 요청 방식에 따라 복잡해질 것이고 분명 많은 에러를 경험하게 될 것이다. 그렇기 때문에 많은 에러에 대한 예외처리가 필요하며 이를 위해서 여러가지 상황에서의 서버 통신을 경험해야 한다고 본다.\";","export default \"## 2022년 5월 31일 프론트엔드 개발자로써 첫 면접\\n2년만? 쨌든 오랜만에 서울에 올라왔다.\\n회사는 뱅뱅사거리에 위치했고 건물들이 하늘을 찔렀다..~~하늘 구멍남~~\\n\\n## 첫 대면 . .\\n프론트엔드 개발자분들 만나뵈었고 너무 멋있었다.\\n멘트와 제스처부터 개발자의 포스가 느껴졌다. ~~잘 모르지만 일단 리스펙~~\\n\\n# 면접\\n쨌든.. 면접이 시작됐고 rest api axios / async vuex / vue-router 동기와 비동기 함수 등 프론트 엔드 직무 관련한 기술적인 질문들을 해주셨다.\\n하지만 대답할 수 있는 부분이 거의 없었고, 이론을 떠나 경험에서도 많이 부족했다.\\n 역량의 부족함이 적나라하게 드러났다. 하지만 면접관분들은 오히려 공부 방법과 경험을 쌓는 여러가지 피드백을 많이 해주셨다. 어떤 부분이 부족한지도 알려주셨다. 면접을 보고나니 포트폴리오 사이트에 기재된 내용들은 뻥튀기였구나 생각이 들었다.\\n~~그딴 포트폴리오로 낸 입사지원서가 민망~~ --;\\n## 결론\\n 피드백해주시고 귀중한 시간 내주신 면접관분들께 감사했다. 개발자로서 더 노력하고 싶었다. 추천해주신 관련서적도 찾아보고 전문적인 지식을 공부하고 협업에 대한 경험을 최대한 쌓아야겠다. 오늘부터 방구석에서 머리를 터뜨려야겠다. 오늘 면접은 결과를 떠나 값진 경험이였다.\\n아직 갈 길이 대구~서울 보다도 멀고 험했다.\\n\\n 정신차리고 더 성장하자.\";","export default \"# 검색엔진최적화(Search Engine Optimization)란?\\n__검색엔진최적화(SEO)__ 는 웹사이트와 웹페이지를 검색엔진이 쉽게 __발견(디스커버리)__ 하고 __읽어가서(크롤링) 색인(인덱싱)__ 후 __상위 노출(랭킹)__ 시켜 자연 유입되는 트래픽의 양과 질을 높일 수 있도록 __관련 검색 알고리즘의 특성을 고려해서 웹사이트의 구조나 콘텐츠를 개선하는 일련의 작업__ 을 말한다.또 다른 표현으로 SEO를 정의하면 운영 중인 웹사이트를 통해 유입을 기대하는 보다 많은 키워드의 검색 결과 페이지에서 기업이 제공하는 웹콘텐츠가 보다 높은 순위로 노출되어 결과적으로 보다 __많은 트래픽을 유도__ 할 수 있도록 콘텐츠 작성과 웹사이트 구축에서 지켜야하는 일정한 __가이드라인__ 이라고도 할 수 있다. 하지만 조금만 더 검색해보면 검색엔진최적화에 대해 여러 문서가 각기 다르게 정의하고 있는 것을 볼 수 있다. 이것은 검색엔진최적화를 사이트 구축에 관련한 기술적 측면으로 정의하는지 아니면 마케팅 커뮤니케이션의 한 시책으로서 정의하는 지에 따라 달라진 것 뿐이지 그 실체가 다른 검색엔진 최적화가 있는 것이 아니라는 것을 기억해야 한다.\\n\\n\\n# 검색엔진최적화의 핵심 가치\\n검색엔진이 발전하면서 최근의 __검색엔진최적화(SEO)__ 업계에서는 HTML태그 최적화, 소위 테크니컬SEO나 양질의 백링크의 양을 늘리는 외부 SEO보다도 __검색 이용자의 검색의도에 맞춘 양질의 콘텐츠 제공__ 을 통해서 __소비자 경험을 개선__ 하고 이를 통해 검색엔진으로부터 높은 평가를 받아 검색결과에서 높은 성과를 추구하는 __콘텐츠SEO를 중시하는 경향__ 이 뚜렷해지고 있다. __검색 이용자의 검색의도에 정교하게 잘 맞춘 콘텐츠를 제공하는 것에 집중한다__ 는 말은 앞으로의 검색엔진최적화(SEO)를 이야기함에 있어 가장 중요한 핵심 시책으로 평가 받을 표현이다.\\n\\n## 검색엔진의 선구자\\n2000년대에는 다른 웹 검색엔진들은 생산자가 작성한 태그 요소와 텍스트만으로 랭킹 펙터를 결정했다.하지만 구글은 소비자가 느끼는 가치평가가 반영된 웹페이지 사이의 링크 구조를 __페이지 랭크__ 라는 알고리즘으로 구체화하여 검색 랭킹 결정에 반영했다. 그리고 검색시장 절대적 1위의 위치를 확보한 2010년 이후에는 압도적인 자연어 이해능력, 유저 피드백 이해 능력, 인공지능분야에서의 능력을 바탕으로 웹 콘텐츠의 의미를 높은 레벨에서 이해하며 검색 이용자들은 높은 수준의 검색결과페이지로 만족시켜왔다. 결과적으로 SEO의 전문가들도 태그 최적화, 백링크 강화에 이어 검색 의도에 맞춘 컨텐츠 강화에 큰 관심을 갖게 된 것이다. 이러한 변화를 이끈 구글의 검색에 대한 철학은 구글 설립자 중 한명인 __래리 페이지(Larry Page)__ 의 완벽한 검색엔진에 대한 그의 말에 잘 나타난다.\\n\\n>\\\"완벽한 검색엔진은 당신이 뜻한 바(의도)를 정확히 파악하고, 제공할 수 있는 어떤 것\\\"\\n\\n## 검색엔진최적화의 정의\\n\\n__\\\" 검색자의 의도를 이해하고 이에 충실히 맞춰 웹 페이지의 콘텐츠를 제작하고, 이 페이지가 검색 결과 페이지에서 잘 노출 되도록 웹페이지의 태그와 링크 구조를 개선하여 자연 유입 트래픽을 늘리는 시책 \\\"__\\n\\n이 외에도 SEO란 무엇인가? 라는 질문에 대한 다양한 답이 존재한다. 예를 들어 검색엔진이 검색 결과를 제공하는 주요 프로세스에는 디스커버리 크롤링 인덱싱 랭킹 네가지 단계가 있는데 이러한 관점에서 SEO를 정의하자면 웹사이트에서 새로 만들어진 콘텐츠를 웹 검색 크롤러가 우선 발견하고, 잘 읽어갈 수 있도록 만들고, 각 페이지가 트래픽 유입을 일으킬 수 있는 주제로 색인될 수 있도록하며, 검색 결과에서 높은 랭킹을 얻을 수 있도록 페이지 별로 태깅과 컨텐츠를 최적화하는 것으로도 정의할 수 있다. SEO에 대한 이 같은 정의는 웹 사이트를 구축하는 기술적 측면에서 SEO의 의미를 전달해주는 정의라고 할 수 있다. 아무리 좋은 컨텐츠를 열심히 만들어도 웹사이트 레벨에서 어떤 기술적 문제가 있거나 설정을 잘 못하여 크롤러가 웹페이지를 제대로 발견하지 못 하거나 다른 URL에 다른 컨텐츠를 가지고 있음에도 동일한 메타 정보로 설정이 되어 페이지의 테마성을 검색엔진이 제대로 인덱싱하여 높게 랭킹을 줄 수 없다면 SEO에서 좋은 성과를 기대할 수 없다. 바로 이런 부분들이 디스커버리, 크롤링과 인덱싱, 랭킹 요소와 깊게 관련 되어있다.\\n\\nSEO는 기술적인 관점으로 보았을 때는 검색 결과를 제공하기 위해 거치는 주요 프로세스를 정확하게 파악하여 페이지 별 태깅과 컨텐츠를 최적화 하는 것이라 정의하고 있다.\\n\\n# 검색엔진 최적화(SEO) 활용\\n\\n## 구체적인 페이지 제목 기입하기\\n- HTML 헤더에 title 은 구체적이며 간결하게 구성한다.\\n- 검색 결과 화면에서 텍스트가 잘리지 않도록 한다.\\n- 유인 키워드를 반복하지 않도록 한다.\\n- 제목의 시작과 끝에 사이트 이름을 포함 후 - 로 소제목 구분\\nex)oplinote - 검색엔진최적화, SEO, 검색엔진이란\\n\\n## 메타태그 작성\\n\\nGoogle 등 메타태그를 알고리즘에서 제외하는 검색엔진이 증가하고 있다. 하지만 키워드와 디스크립션의 정보는 검색결과에도 표시되고 있기 때문에 포함하는 것이 좋다.\\n\\n## img 태그 alt(alternative)속성 기재\\n이미지 자체는 검색엔진이 인식하지 않고 alt 내 텍스트를 통해 인덱싱 작업을 하기 때문에 SEO에 효과적이다. 이 외에도 alt 속성은 마크업 시 가독성과 유용성 측면에서 좋고 스크린리더가 읽을 수 있기 때문에 시각장애인들에게 도움을 줄 수 있다.\\n\\n## 모든 페이지가 유입 페이지가 되도록 사이트 구성\\n홈페이지 내 어떤 페이지로 사용자가 방문할 지 모르기 때문에 모든 페이지에는 메인 페이지로 이동할 수 있는 링크를 설치해 전체 사이트의 동선 개선을 하여야 한다. 사용자의 편의성의 관점에서도 좋은 영향을 줄 수 있다.\\n\\n## https 사용\\n동일 사이트라면 http 보다 https 로 서비스할 때 구글 검색엔진에서 전체 점수의 약 1%정도 해당하는 랭킹 가산점을 부여한다.\";","export default \"\\n__CSS__ 작업을 하면서 선택자가 겹치면서 적용에 우선 순위를 두어야 할 때가 있다. 퍼블리싱을 막 배운 시기에는 선택자가 중복되는 경우 `!important` 로 해결하는 경우도 있었는 데 이는 작업을 몇 번 하다보면 알 수 있지만 상당히 좋지 못한 코드다. 사이트를 작업하다보면 선택자가 수도 없이 중복되기 때문에 `!important` 를 남용하면 좋지 않다. 여러가지 상황에 따라 선택자를 호출하는 경우가 많을 시에는 적용순위를 그에 맞게 나누어야 하기 때문에 `!important` 속성은 정말 어쩔 수 없이 마지 못해 부여하는 편이다. 올바른 적용 순위를 나누기 위해 알아야 할 `!important` 를 포함한 css 속성의 적용 우선 순위에 대해 알아보자.\\n\\n# CSS 속성 우선 적용 순위\\n\\n[1] !important\\n[2] HTML 에서 작성된 style 속성\\n[3] ID 선택자\\n[4] .class 나 :추상클래스 ex):hover :active\\n[5] tagname (div span 등)\\n[6] 상위 객체에 의해 상속된 속성\";","export default \"# 변수\\nES6 문법부터 `let`과 `const` 가 생겼다.이 전에는 `var` 가 존재했다.\\n\\n`var` `let` `const` 세 변수의 차이점에 대해 알아보자.\\n\\n``` js\\nvar number = 1;\\nconsole.log(number); // 1\\nvar number = 2;\\nconsole.log(number); // 2\\n```\\n위 코드는 오류가 발생하지 않는다.\\n`var` 는 한번 선언된 변수를 다시 선언할 수 있다.\\n\\n``` js\\nlet number = 1;\\nconsole.log(number); // 1\\nlet number = 2;\\nconsole.log(number); // error!\\n```\\n같은 변수를 `let`으로 선언했을 경우 오류가 발생한다.\\n\\n# 호이스팅\\n`var` 는 선언하기 전에 사용할 수 있다.\\n``` js\\nconsole.log(number); // undefined\\nvar number = 1;\\n```\\n`var` 는 아래 코드처럼 실질적으로 코드가 옮겨지진 않지만 최상위로 끌어올려진 것처럼 동작한다.\\n``` js\\nvar number;\\nconsole.log(number); // undefined\\nnumber = 1;\\n```\\n이를 __호이스팅(hoisting)__ 이라고 한다. 하지만 선언은 호이스팅이 되지만 값은 호이스팅이 되지 않는다. 고로 undefined 가 출력되는 것을 볼 수 있다.\\n\\n## let 과 const 는 호이스팅이 일어나지 않을까?\\n아래처럼 `let` 변수를 선언 전에 사용하면 에러가 발생한다.\\n``` js\\nconsole.log(number); // ReferenceError\\nlet number = 1;\\n```\\n이를 통해 `let` 변수는 호이스팅이 일어나지 않는다고 생각할 수 있지만 사실 `let` 과 `const` 모두 __호이스팅__ 이 일어난다. 그런데 왜 `let` 과 `const` 는 에러가 출력되는 것일까?\\n\\n## TDZ(Temporal Dead Zone)\\n`let` 과 `const` 가 호이스팅이 되지만 에러가 발생하는 이유는 __TDZ(Temporal Dead Zone)__ 때문이다. __TDZ__ 는 `let` 과 `const` 가 실질적으로 선언된 위치 이 전의 영역이다. `let` 과 `const` 가 호이스팅이 된다하더라도 __TDZ__ 에서 사용될 시 에러를 출력한다.\";","export default \"``` js\\n// Infinity 는 무한대의 속성을 나타냄\\nconsole.log(Infinity) // Infinity\\nconsole.log(Infinity + 1) // Infinity\\nconsole.log(Infinity - 1) // Infinity\\nconsole.log(Infinity / 1) // Infinity\\nconsole.log(Infinity * 1) // Infinity\\nconsole.log(100 / 0) // Infinity\\n// Math.pow(base, exponent) : base의 exponent 제곱\\nconsole.log(Math.pow(100, 1000000)) // Infinity\\n------------------------------------------\\n// base(밑)가 음수이고 exponent(지수)가 분수 이면 NaN\\nMath.pow(-7, 1/3); // NaN\\nconsole.log(NaN) // NaN\\n// 해당 값이 NaN 인지 판별\\u001f\\nconsole.log(isNaN(NaN)) // true\\n// isNaN() 은 몇몇 혼란스러운 케이스를 가지고 있어 ES2015 문법인 Number.isNaN() 을 권장\\n------------------------------------------\\nconsole.log(undefined)\\nlet x;\\nconsole.log(x)\\n------------------------------------------\\nconsole.log(null) // null\\nconsole.log(null + 1) // 1\\n// == (Equal Operator) : 값을 비교한다.\\n// null 과 undefined 둘다 값이 없음을 뜻하기 때문에 true를 출력한다.\\nconsole.log(null == undefined) // true\\n// === (Strict Equal Operator) : 값과 값의 종류 (Data Type)까지 \\\"엄격하게 비교\\\"한다.\\n// null 의 값의 종류는 object undefined는 undefined 이므로 false를 출력한다.\\nconsole.log(null === undefined) // false\\n// typeof() 객체를 통해 값의 종류를 확인할 수 있다.\\nconsole.log(typeof(null)) // object\\nconsole.log(typeof(undefined)) // undefined\\n------------------------------------------\\n// parseInt(A,B) : A는 B진수이니 10진수로 변환하라.\\n// 숫자의 데이터타입이 문자열인 경우도 정수형으로 반환된다.\\nconsole.log(parseInt('100')) // 100\\n// 숫자가 아닌 문자를 만나는 즉시 중단된다.\\nconsole.log(parseInt('1003d1d2f3d952')) // 1003\\n// Number는 숫자가 아닌 문자를 포함되어 있으면 NaN을 반환한다.\\nconsole.log(Number('1003d1d2f3d952')) // NaN\\n// 숫자가 아닌 문자를 만나 NaN이 출력되는 모습 !\\nconsole.log(parseInt('d1')) // NaN\\n// 정수형 반환이기 때문에 소수점은 잘라냄\\nconsole.log(parseInt('100.123')) // 100\\n// 실수형 반환을 위한 parseFloat !\\nconsole.log(parseFloat('100.123')) // 100.123\\nconsole.log(parseFloat('100.123000')) // 100.123\\nconsole.log(parseFloat('100.1,2,3000')) // 100.1\\n// 10진수의 100을 10진수로 변환\\nconsole.log(parseInt(100,10)) // 100\\n// 16진수의 100을 10진수로 변환\\nconsole.log(parseInt(100,16)) // 256\\n// 8진수의 100을 10진수로 변환\\nconsole.log(parseInt(100,8)) // 64\\n// 2진수의 100을 10진수로 변환\\nconsole.log(parseInt(100,2)) // 4\\n------------------------------------------\\nlet arr = [10,2,3,22,33,100,11]\\nlet arr2 = [12,13]\\n// 두 배열을 이어붙힌 값을 반환 원본값에 직접적인 영향을 주지 않음\\nconsole.log(arr.concat(arr2))\\n// stack : First In Last Out\\n// 배열의 마지막 값을 제거하고 해당 값을 반환\\nconsole.log(arr.pop()) // 11\\n// 배열의 마지막에 값을 추가하고 배열의 길이를 반환\\nconsole.log(arr.push(1000)) // 8\\n\\n// queue\\n// 배열의 첫번째 값을 제거하고 해당 값을 반환\\nconsole.log(arr.shift()) // 10\\n// 배열의 첫번째 자리에 값을 추가하고 배열의 길이를 반환\\nconsole.log(arr.unshift()) // 8\\n------------------------------------------\\n// 배열의 모든 요소를 123로 채운 후 해당 배열값으로 반환\\nconsole.log(arr2.fill(123)) // [123,123]\\n// 조건에 성립하는 값만 출력 x : arr안의 원소를 뜻함\\n// 배열 값이 문자인 경우 x.length 로 문자열의 길이도 가능\\nconsole.log(arr.filter(x => x > 30)) // [33,100]\\n\\nlet arr3 = [[1,2],3,[4,5,[6,7]]];\\n// 다차원 배열을 한 차례 벗겨낸다.\\nconsole.log(arr3.flat()) // [1,2,3,4,5,array(2)]\\n// 두번에 걸쳐 배열을 벗겨낸다.\\nconsole.log(arr3.flat(2)) // [1,2,3,4,5,6,7]\\n// 배열 내 해당 값이 있는 지 찾아낸다. n차원 배열일 경우 찾지 못함\\nconsole.log(arr.includes(10)) // true\\n// 배열 내 값을 하나의 문자열로 만든다.\\nconsole.log(arr.join('')) // 1023223310011\\n// 배열을 콜백함수에 의해 새로운 배열 재정의한다.\\nfunction Fn(x){ return parseInt(x)}\\nlet arr3 = ['1','2','3'];\\nconsole.log(arr3.map(Fn)) // [1,2,3]\\nconsole.log(arr3.map(x => parseInt(x))) // [1,2,3]\\n// 배열을 사전식으로 정렬\\nconsole.log(arr.sort()) // [10, 100, 11, 2, 22, 3, 33]\\n// 배열을 역순으로 정렬\\nconsole.log(arr.reverse()) // [11, 100, 33, 22, 3, 2, 10]\\n// 요소를 삭제 및 교체한다.\\n// 2 번째 요소에 1개를 제거하고 'hi'를 추가한다.\\n// 제거된 값을 반환\\nconsole.log(arr.splice(2,1,'hi')) // [3]\\nconsole.log(arr) // [10, 2, 'hi', 22, 33, 100, 11]\\n// 요소를 인덱스 기준으로 잘라냄\\n// 3번쨰 부터 6번째 전까지 ( 3, 4, 5) 잘라냄\\nconsole.log(arr.slice(3,6)) // [22, 33, 100]\\n// 기존 배열 값에 영향을 주지 않음.\\nconsole.log(arr) // [10, 2, 3, 22, 33, 100, 11]\\n```\\n\\n\";","export default \"## 작성 동기\\n블로그를 제작하면서 카테고리에 해당 되는 게시물만 출력시키기 위해 v-if 와 v-show 에 대해 알아 보았고 둘에 차이점도 존재했다.\\n이에 대한 기록을 하고자 한다.\\n\\n### v-if\\n우선 v-if 는 조건에 해당되지 않으면 렌더링을 하지않는다.\\n\\n``` html\\n<div v-if=\\\"true\\\">True</div>\\n<div v-if=\\\"false\\\">False</div>\\n```\\n### v-else\\nv-if 와 함께 사용되는 v-else 는 v-if 가 조건에 해당하지 않을 경우 렌더링된다.\\n``` html\\n<div v-if=\\\"false\\\">true 아니면 안나가</div>\\n<div v-else>유감입니다..어떻게 이거라도..출력을</div>\\n```\\n### v-show\\nv-show 는 v-if 와 결과는 같을 수 있지만 v-show 는 조건에 해당하지 않더라도 태그를 렌더링을 하지만 `display:none` 처리 시킨다.\\n``` html\\n<div v-show=\\\"true\\\">True</div>\\n<div v-show=\\\"false\\\">False</div>\\n```\\n\";","export default \"### 작성 동기\\n\\n현재 블로그 게시글을 `markdown` (.md) 형식으로 작성 후\\n불러오는 작업 중에 있다. 과정에서 `vuex` 로 게시글이 담긴 posts 라는 폴더를 가져오기 위해 `vuex` 의 개념에 대해 배우고 과정을 기록으로 남기려한다.\\n## vuex 란\\n\\n> `Vuex` 는 애플리케이션의 모든 컴포넌트에 대한 __중앙 집중식 저장소__ 역할을 하는 `Vue.js`의 **상태관리 라이브러리** 이다.\\n의도에 따라 상태를 변경 및 관리할 수 있다고 한다. 기존 `Flux`의 아키텍처(ㅇ?)를 따라가고 있으며 `react`의 `redux` 를 비교 대상으로 볼 수 있다고 한다. `vue.js` 에서도 `redux` 사용이 가능하나 `vue.js` 는 `vuex` 와 호환이 좋고 더 직관적인 개발이 가능하다고 한다. \\n\\n`component` 는 __부모 - 자식__ 관계로 `props` 와 `emit` 를 통해 데이터를 주고 받는다. `vuex` 는 __중앙 집중식 저장소__ 이기 때문에 `props` 와 `emit` 를 신경쓰지 않아도 된다.\\n\\n그러므로 `component` 의 구조가 복잡할 때에는 `props` 와 `emit` 를 통해 데이터 전달보다는 `vuex` 를 통해 별도의 저장소로부터 데이터를 중앙제어하는 것이 올바르다고 한다.\\n\\n`vuex` 의 채택은 필수로 보이지만 규모가 작은 경우 __event Bus__ 를 사용 해도 무방하다.\\n하지만 그 역시도 규모가 조금만 커져도 관리가 힘들어지므로 `vuex` 사용을 추천\\n~~(대충 `vuex` 쓰라는 뜻)~~\\n\\n`vuex` 를 이해하고 바로 도입하기에는 난이도가 있다.\\n컴포넌트의 설계보다 더 __중요한__ 설계라고 한다.\\n컴포넌트와 다르게 __중앙제어__ 라는 속성 때문이다.\\n## vuex 의 구조\\n>`vuex` 의 구조는 `state`,`mutation`,`action`,`getters` 네가지 형태로 관리된다.\\n이때 이 관리포인트를 `store` 패턴을 사용 흔히 store 라 불린다.\\n이 네가지는 서로간 간접적 영향이 있고 __단방향 데이터 흐름__ 으로 볼 수 있다.\\n\\n### state\\n>`state`는 `vue` 컴포넌트의 data 라고 생각해도 된다. __원본 소스의 역할__ 을 하고 __view와 직접적으로 연결되어 있는 model__ 이다.\\n이 `state`는 직접적인 변경은 불가능하며 `mutation`을 __통해서만 변경__ 이 가능하다.\\n`mutation` 을 통해 `state` 가 변경이 되면 반응적으로 `view` 가 업데이트 된다.\\n\\n### mutations\\n>`mutation` 은 `state` 를 변경하는 __유일한 방법__ 이고 __이벤트__ 와 유사하다. `mutation` 은 __함수__ 로 구현되며 첫 번째 인자는 `state` 두번째 인자는 `payload` 를 받을 수 있다. 여기서 `payload` 는 여러 필드를 포함할 수 있는 __객체형태__ 도 가능하다. 이 `mutation` 은 일반적으로 직접 호출이 불가능, `commit` 을 통해서만 호출이 가능하다.\\n_⭐️ `mutations` 에서는 api를 통해 전달받은 데이터를 가공하여 `state` 를 설정하는 데 많이 사용된다고 한다.(실무)_\\n#### ex) ####\\n```javascript\\nstore.commit('setData',payload)\\n```\\n\\n### actions\\n> `action` 은 `mutation` 과 비슷하지만 `mutation` 과 다르게 __비동기 작업__ 이 가능하다고 한다.\\n또한 `mutation` 에 대한 `commit` 이 가능해 `action` 에서도 `mutation` 을 통해 `state` 를 변경할 수 있다.\\n`action` 에서는 첫 번째 인자를 `context` 인자로 받을 수 있고 이 `context` 에는 `state`, `commit`, `dispatch`, `rootstate` 와 같은 속성들을 포함한다. 두 번째 인자는 `mutation` 과 동일하게 `payload` 로 받을 수 있다.\\n`commit` 을 통해 `mutation` 을 호출했다면 `action`은 `dispatch`를 통해서 호출한다.\\n`context` 의 속성을 보면 `dispatch`가 있는 것으로 보아 `action` 에서는 서로 다른 `action` 을 호출할 수 있다는 것을 볼 수 있다.\\n_⭐️  `actions`은 `axios` 를 통한 api 호출과 그 결과에 대해 반환(return)하거나 `mutation`으로`commit`하여 상태를 변경하는 용도로 사용된다.(실무)_\\n#### ex) ####\\n```javascript\\nstore.\\bdispatch('setData',payload)\\n```\\n\\n### getters\\n>`getters` 는 쉽게 vue 컴포넌트에서 `computed` 라고 보면 된다.\\n말로 풀자면 __계산된 속성__ `getter` 의 결과는 종속성에 따라 캐시되고 일부 __종속성__ 이 변경된 경우에만 다시 __재계산__ 된다.\\n즉, 특정 `state`에 대해 어떠한 연산을 하고 그 결과를 `view`에 바인딩 할 수 있으며, `state` 의 변경 여부에 따라 `getter`는 재계산이 되고 `view` 역시 업데이트를 일으킨다.\\n이때 `state` 원본 데이터로서 변경은 일어나지 않음!\\n_⭐️ 실무에서도 `state`의 연산 처리가 필요한 내용에 대해 `getter` 를 사용하지만 `getters`의 경우 대용량 처리 시에 퍼포먼스와 연관이 되어있으므로 조심해야 한다고 한다고 한다고 한다._\\n\\n## 마치며\\n`vuex` 의 기초적인 개념에 대해 알아보았다.\\n설치와 관련한 내용은 아래 링크를 참고하면 된다.\\n\\n해당 게시글은 [이 곳](https://kdydesign.github.io/2019/05/09/vuex-tutorial/) 을 참고하여 작성되었습니다.\\n\";","export default \"## 작성동기\\n현재도 블로그 제작 중에 있고 블로그를 제작하며 한없이 부족함을 느끼고 있다.\\n`store/index.js` 의 `modules` 에서 import 된 디렉토리 default 를 불러오면 해당 디렉토리의 `index.js` 를 자동으로 찾는 듯하다.\\n\\n\\n## 디렉토리 내용물 한번에 import 하기\\n\\n1. import 할 디렉토리에 `index.js` 생성 후 아래 내용 작성\\n``` javascript\\nconst files = require.context('.', false, /\\\\.확장자명$/)\\nconst modules = {}\\nfiles.keys().forEach((key) => {\\n  if (key === './index.js') return\\n  modules[ key.replace(/(\\\\.\\\\/|\\\\.확장자명)/g, '') ] = files(key).default\\n})\\nexport default modules\\n```\\n2. 확장자명 부분 import 할 내용물의 확장자로 변경\\n\\n왜 md 파일만 raw-loader 가 그대로 가져오지 못하는 거지..?\\ntxt는 있는 그대로 가져오는데 md 는 이상하게 나온다..\\n다른 플러그인과 충돌이 있는건가..\\n일단 설치한 플러그인을 삭제 후 다시 진행..\\n\\n+뒤늦은 해결\\n - 우선 inline 방식으로 raw-loader! 를 기재함으로써 파일을 있는 그대로 읽어온다.\\n - 하지만 raw-loader! 의 위치가 잘못되었다. 읽어오는 위치에 있어야 하는 데 읽어온 후의 엉뚱한 위치에 있었기 때문..!\\n\\n## 디렉토리 파일 배열로 리턴받기\\n디렉토리 내용물들을 배열로 리턴해주는 함수를 찾아보니\\nfliesystem api 가 있었다.   \\n`fs.readdir()` 를 사용하면 아주 간단하게 가져올 수 있을 것 같았다.\\n\\n그런데..구글링을 하는데 모든 글에 `node.js` 가 태그돼있었다..\\n불안감이 엄습했고..\\n\\n아니나 다를까 fs 는 백엔드에서 사용가능하고 프론트엔드(클라이언트)에서는 보안상의 이유로 사용할 수 없다.(사실 생각해보면 당연한 거 였음ㅋㅋ)\\n\\n결론적으로 뭐 일단 안되는 이유를 확실하게 알아서 좋고 또 안돼서 싫은ㅋㅋㅋ\\n\\n다음 방법으로 가보자~\\n\\n## 다음 방법\\n디렉토리에 파일을 배열로 받지 못했기 때문에 다른 방법을 선택했다.\\n\\n\\n### script\\n``` javascript\\n// _index 는 v-for=\\\"(item,index) in posts 의 index\\n\\nconst markText = (_index) => {\\n      let text = marked(require(`raw-loader!../posts/post${_index}.md`).default.replace(/\\\\n|#|__|```|~~/g, \\\"\\\"));\\n      return text;\\n    }\\n```\\n1. 우선 .md 파일들의 이름을 통일 했다 (ex : post1.md / post2.md / post3.md)\\n2. marked.js 를 이용하여 .md 파일을 읽게끔 해주었다.\\n2. 블로그 글 목록의 내용물이기 때문에 replace로 개행과 마크다운 특문 제거 후 text 를 리턴\\n\\n### templete\\n\\n```html\\n    // v-if 로 해당 카테고리에 해당하는 글만 출력되게 했다.\\n<div class=\\\"post-box\\\" v-if=\\\"cateSort(item.category)\\\">\\n\\t\\t// 파일명(post1.md)이 1부터 시작하기 때문에 index + 1\\n        <div v-html=\\\"markText(index + 1)\\\" class=\\\"post-cont\\\"></div>\\n</div>\\n\\n```\\n\\n드디어 카테고리별로 글들이 정상 출력된다.\\n\\n하지만 보란듯이 문제점이 있다.\\n- post1.md post2.md 처럼 제목을 통일 해야 한다.\\n- 해당 글에 대한 카테고리를 json 파일에 따로 기재해주어야 한다.\\n\\n하지만 전체적인 틀을 갖추고 세부적인 개선이 필요하다고 판단했다.\\n\\n굳이 안 적어도 프로불편러라 알아서 투머치 개선하겠지만..\\n혹시나 하는 마음에 문제점을 기재한다.\\n미래의 나자신 해결 '해 줘'\\n\\n\";","export default \"## 작성동기\\nmd 파일을 출력에 성공한 나 자신.. 기쁨도 잠시..\\n아래 문제에 봉착했다.\\n- marked.js 는 ``` 코드블럭을 지원하지 않는 것 같다.\\n- 감싸진 것들이 날 것 그대로 출력되고 있다.\\n- 해결을 위해서 prism.js 를 사용한다고 한다.\\n- prism.js 는 marked.js 가 지원하지 않는 코드블럭 양식에 대해 지원하고 특정 태그로 감싸주는 고마운 역할을 한다고 한다.\\n\\n\\n1. prism.js 를 설치 해준다.\\n>$ npm install --save prismjs\\n2. prism.js 패키지와 구성요소들을 import 했다.\\n\\n```javascript \\nimport { marked } from \\\"marked\\\";\\nimport prism from \\\"prismjs\\\";\\nimport \\\"prismjs/themes/prism.css\\\";\\nimport \\\"prismjs/components/prism-bash\\\";\\nimport \\\"prismjs/components/prism-javascript\\\";\\nimport \\\"prismjs/components/prism-json\\\";\\nimport \\\"prismjs/components/prism-liquid\\\";\\nimport \\\"prismjs/components/prism-markdown\\\";\\nimport \\\"prismjs/components/prism-markup-templating\\\";\\nimport \\\"prismjs/components/prism-php\\\";\\nimport \\\"prismjs/components/prism-scss\\\";\\n```\\n\\n3. 그리고 marked 에게  prism 구성요소를 사용하도록 해주었다.\\n\\n>``` javascript\\nmarked.setOptions({\\n  highlight: (code, lang) => {\\n    if (prism.languages[lang]) {\\n      return prism.highlight(code, prism.languages[lang], lang);\\n    } else {\\n      return code;\\n    }\\n  },\\n});\\n\\n4. 그 후 옵션이 부여된 marked 를 사용해본다.\\n\\n``` javascript\\nmarked.parse(text)\\n```\\n\\n정상적으로 출력된다 !\\n\\n### 여기서 잠깐 ! \\n적용 후 지켜보니\\n- marked.js 에서는 > 인용문 지원이 안되는 것 같았다.\\n- 조금 더 파보니 html 상에는 `<blockquote>` 태그로 인용문이 들어가있다.\\n- 결론적으로 지원은 되지만 디자인(css)이 따로 없는 것 같다.\\n- 그래서 아래 처럼 blockqoute 에 대한 css 구문을 추가했다.\\n- css는 자신있기 때문에..! 소소한 재미를 또..!\\n``` css\\nblockquote {\\n\\tpadding-left: 20px;\\n\\tborder-left: 3px solid #3d3dff;\\n\\t}\\n```\\n\\n### 죄송합니다 한번만 더 멈춰 !!\\n\\n\\n사실 안 멈춰도 됩니다.\\n문제가 있어서는 아니구요.\\n\\n- 링크로 클릭 시 페이지를 탈출 이동 한다는 점\\n- target=\\\"_blank\\\" 옵션을 갖고 싶다는 말입니다.\\n\\nmarked.js 에서 `target` 은 지원하지 않는 것 같습니다.\\n이 부분 역시 marked.js 옵션을 부여해주어야 합니다.\\n\\n_제가 불편한 걸 그냥 못 넘어가서 죄송합니ㄷ.._\\n\\n## 렌더러속성\\n- 우선 marked.js 의 렌더러 함수를 변수에 담아준 후\\n- 링크에 해당하는 부분에 replace 함수로 target 속성을 부여해주는 방식입니다.\\n\\n뭔가했는데 잘 보니 생각보다 단순한 방법이네요\\n``` js\\nconst renderer = new marked.Renderer();\\nconst linkRenderer = renderer.link;\\nrenderer.link = (href, title, text) => {\\n      const html = linkRenderer.call(renderer, href, title, text);\\n      return html.replace(/^<a /, '<a target=\\\"_blank\\\" rel=\\\"nofollow\\\" ');\\n    };\\n```\\n\\n## 기존에 있던 코드에서 renderer 추가\\n``` js\\nmarked.setOptions({\\n      renderer: renderer, // 이 부분 추가해주었습니다.\\n      highlight: (code, lang) => {\\n        if (prism.languages[lang]) {\\n          return prism.highlight(code, prism.languages[lang], lang);\\n        } else {\\n          return code;\\n        }\\n      },\\n    });\\n```\\n\\n코딩 인생 얼마 안 됐지만 몇 안되는 속전속결의 순간..\\n별 오류없이 잘 진행된..\\n어려운 내용은 아니였지만 뭔가를 사례와 검색에 이해하고 해결했다는 것이 뿌듯..\\n그 와중에 빠르게 해결이 또 되다니..신기하다\\n~~오늘 삽질 12시간째인건 비밀~~\\n\\n\\n해당 게시글은 [이 곳](https://benborgers.com/posts/marked-prism) 을 참고하여 작성되었습니다.\\n\";","export default \"## 문제 발생\\n- 현재 카테고리에서 다른 카테고리로 이동 시 `prism.js` 가 코드블럭에 대해 부여해주었던 `class` 가 제거되는 현상이 발생했다.\\n\\n## 해결\\n`v-if`를 사용하였기 때문에 다른 카테고리 이동 시에 `html` 내 태그 자체가 제거되는 것이였고 태그자체를 제거하지 않고 `display:none` 스타일 속성을 부여하는 `v-show` 로 수정하여 문제를 해결하였다.\\n\\n## 게시글 작성일자 추가하기\\n- .md 파일의 생성일과 수정일 정보를 가져오려했지만 \\n해당 정보 역시 `fileSystem api` 를 사용해야 했고 보안상 프론트엔드에서 수행할 수 없는 작업이다.\\n\\n- 어쩔 수 없이 해당 .md 파일 생성일자를 로컬에서 확인 후 json 파일 \\\"date\\\" 데이터에 수기로 작성해주었다.\\n`isO-8601` 방식으로 작성하여 별도의 파싱 없이 `Date()` 객체에 넣을 수 있었다.\\n\\n이 후 아래와 같이 현재 일자와 파일 생성일자의 격차를 구하여 기간 별로 다른 멘트를 리턴한다.\\n\\n``` js\\nconst postDate = (_createDate) => {\\n      \\n      let date1 = new Date(); // 현재 일자\\n      let date2 = new Date(_createDate); // 파일 생성일자\\n      // 일자의 격차 구하기\\n      const diffDate = date1.getTime() - date2.getTime();\\n      // 분 단위로 변경\\n      let diffMin = parseInt(diffDate / (1000 * 60));\\n\\n      // 1 시간 이내\\n      if (diffMin < 60) {\\n        return diffMin + \\\"분 전\\\";\\n      } \\n      // 1시간 ~ 24시간 이내\\n      else if (diffMin > 60 && diffMin < 60 * 24) {\\n        return parseInt(diffMin / 60) + \\\"시간 전\\\";\\n      }\\n      // 하루 전 ~ 이틀 전\\n      else if (60 * 24 < diffMin) {\\n        if (120 * 24 < diffMin) return \\\"이틀 전\\\";\\n        else return \\\"하루 전\\\";\\n      }\\n      // 이 후\\n      else if (180 * 24 < diffMin) {\\n        return parseInt((diffMin / 60) * 24) + \\\"일 전\\\";\\n      }\\n      return diffMin;\\n    };\\n```\\n\\n## 최신글 상단 게시\\n- 게시글에 일자를 추가하고 나서야 블로그가 이상함을 느꼈다. \\n- 오래된 글이 위에 있고 최신글이 밑으로 쌓여 사용자 경험상 좋지 못하다고 판단되었다.\\n\\n>`reverse()` 객체를 이용하여 배열을 역순으로 정렬 시도 하였으나 post 파일을 배열을 통해 가져온 것이 아니기 때문에 해결할 수 없었다.\\n\\n## css 를 이용하여 해결\\n- 고민 끝에 post가 나열돼있는 list-wrap 에 \\n`flex-direction : column-reverse`\\n속성을 부여했다.\\n``` css\\n.list-wrap {\\n        display: flex;\\n        flex-direction: column-reverse;\\n        .post {\\n        \\t---\\n        }\\n    }\\n```\\n효율적으로도 나쁘지 않은 해결 방법인 것 같아 불편함 없이 채택했다.\\n\\n_ ps 코딩 15시간 째 슬슬 피폐해지는 기분이다..\\n시간이 너무 빨리 가는 듯 하다..다음에 계속..!반응형도 해야지!_\";","export default \"## 게시물 상세 보기\\n리스트에 출력된 게시물을 클릭 시 해당 글로 이동하게 하려고 한다.\\n- List의 post-box에 @click를 이벤트를걸어주었다.\\n- movePost 함수를 실행하도록 하였고 파라미터로 `item.id` 를 넘겨주었다.\\n``` html\\n<div class=\\\"post-box\\\" @click=\\\"movePost(item.id)\\\">\\n```\\n\\n- router 로 name 과 prams를 밀어준다.\\n``` javascript\\nconst movePost = (_id) => {\\n      router.push({\\n        name: \\\"Post\\\",\\n        params: {\\n          id: _id,\\n        },\\n      });\\n    };\\n```\\n- router/index.js 에 사용할 컴포넌트를 추가\\n- params로 전달을 위해 props : true 도 추가\\n``` js\\n{\\n\\tpath: '/post',\\n\\tname: 'Post',\\n\\tcomponent: PostView,\\n\\tprops: true,\\n},\\n```\\n\\n\\n- 게시물 상세내용을 출력해 줄 PostView.vue 를 생성한다\\n- `props` 로 `id`값을 전달받는다.\\n- data.json 파일 import\\n- post() 객체에서 post.id 가 담긴 Number type 의 props를 파라미터로 넣어준다.\\n- 전달해 준 props를 이용하여 data.json 파일의 post 배열의 props 번째 데이터를 리턴해준다.\\n- props.id 는 1부터 시작하지만 배열은 0번째 시작이므로 -1 해준다.\\n``` js\\n// PostView.vue\\nimport PostsList from \\\"@/assets/data.json\\\";\\nexport default {\\n  props: {\\n    id: Number,\\n  },\\n  computed: {\\n    post(props) {\\n      return PostsList.post[props.id - 1];\\n    },\\n  },\\n},\\n```\\n- 이 후 템플릿에서 사용할 post 배열에 담긴 data를 아래처럼 작성한다.\\n- 선택한 게시물에 대한 내용이 출력된다.\\n``` html\\n<h1 class=\\\"post-tit\\\">{{ post.title }}</h1>\\n<span class=\\\"post-date\\\">{{ post.date }}</span>\\n<span class=\\\"post-cate\\\">{{ post.category }}</span>\\n```\\n\\n## 문제\\n\\n게시글 상세 컴포넌트 제작 중 \\n뒤로가기 버튼을 만들던 도중 문제가 발생했다.\\n``` html\\n<button class=\\\"back\\\" onclick=\\\"history.back()\\\"></button>\\n```\\nhistory.back() 함수를 사용하면 바로 전 url 로 돌아간다.\\n하지만 list 의 url 은 카테고리를 선택하더라도 변함 없이  '/' 이다\\n\\n그렇기 때문에 예를 들어\\nvue 카테고리를 선택 후 특정 게시물로 진입 후 뒤로가기 할 시 vue 카테고리를 다시 보여주는 게 아닌 total 로 돌아간다.\\n\\n### 해결시도\\n- 모든 카테고리 버튼을 div >  router-link 로 수정했다.\\n- 이후 router/index.js 에서 카테고리별 url을 다르게 수정했다.\\n\\n### 결과는 실패\\n\\n- url 은 다르게 했으나 같은 component를 사용하기 때문이다.\\n\\n### 해결시도\\n- params 로  postView.vue 컴포넌트 진입 시 바로 전 페이지의 카테고리를 전달해준다.\\n- 뒤로가기 버튼을 router-link 로 수정 후   클릭 시 params 로 전달 받았던 카테고리를 다시 넘겨준다.\\n\\n### 또 실패\\n- 같은 컴포넌트를 사용함에 있는 문제인 것 같다.\\n\\ncache 를 배우면 해결할 수 있는 부분인 것 같다.\\n잠시 버튼 기능은 비활성화 하고 텍스트 출력으로..\\n\\n### prism 문제\\n\\n- 예전에 v-show 로 해결했던 pre 태그에 클래스가 사라져 클래스에 부여돼있던 스타일시트 속성들이 사라지는 문제가 게시물 상세보기로 갈 때 다시 나타났다.\\n\\n### 해결\\n- 개발자 도구에서 확인해본결과 코드블럭 속의 언어에 대한 각각의 스타일시트가 아닌 코드블럭 전체에 대한 별개가 아닌 공통적인 클래스였다\\n- 사라진 pre 태그에 대한 css 속성을 직접 부여해주어 해결하였다.\\n\\n### 결론\\n- 사라진 이유에 대해서는 router와 관련있는 것 같고 공부를 하다보면 자연스레 알게 될 것 같다.\\n- pre 태그에 대한 커스터마이징을 할 수 있어서 오히려 좋은 오류였다..ㅋㅋㅋ\\n\\n\\n\\n\\n\";","export default \"## 작성동기\\n반응형 웹 모바일 버전(360px)까지 완료했다.\\n잘 나오는 듯 했으나 멀티라인 말줄임과 문제 발생 특정 환경에서 정상적으로 출력되지 않아서 이유에 대해 파헤쳤다.\\n## 문제\\n``` css\\npost-cont {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n}\\n``` \\n- 리스트의 게시글의 내용을 두 줄 이 후 말줄임 처리하도록 하는 코드를 작성했다.\\n- pc 와 AOS 환경에서는 정상적으로 출력되었으나 아이폰(IOS) 에서는 적용되지 않고 내용물이 밑으로 흘러내렸다.\\n\\n- 찾아 보니 `webkit` 엔진을 사용하지 않는 브라우저가 있고 해당 브라우저에서는 코드가 무시되기 때문에, 그런 상황을 대비한 폴백 처리(대비책)를 해주어야 한다고 한다.\\n- -webkit-line-clamp: 값이 지정되어있어도, 그보다 큰 height값이 요소에 지정되어있다면 나머지 텍스트도 노출되어버리는 것이다.\\n- 이를 방지하기 위해서는 line-height 값을 설정하고, 그에 비례하는 height 값을 주어야 한다.\\n\\n## 웹킷 엔진이란?\\n>- 웹킷(WebKit)은 웹 브라우저를 만드는 데 기반을 제공하는 `오픈 소스 응용 프로그램 프레임워크`이다.\\n- Mac OS 10의 사파리 웹 브라우저 엔진으로 사용하기 위해 컨커러 브라우저의 KHTML 소프트웨어 라이브러리에서 가져온 것이었으나 지금은 `옴니웹`, `시이라`, `아로라`, `미도리`, `유즈블`, `iCab`, `어도비 통합 런타임`, `휴대 전화(아이폰 포함)`, `노키아의 Series 60 브라우저`, `구글의 안드로이드 플랫폼` 에 사용되고 있다.\\n- 한편 웹킷은 트롤테크(Trolltech)의 Qt 4.4에 기본 포함되어 있지만 KDE 프레임워크에 기반을 두는  KDE 프로젝트는 머지 않아 KHTML의 초기 버전을 사용할 것임을 밝혔다.\\n- Acid2 테스트를 통과하였으며 2008년 3월에는 웹킷 최신버전이 Acid3 테스트에서 100점 만점을 받았다.\\n\\n\\n+접두어로 써줘야 할 때가 있는 웹킷\\n\\ncss 속성 중에 접두어를 붙여야 하는 속성이 있다 이 때 -webkit-은 크롬과 사파리가 채용한 웹 브라우저 엔진 이름이다.\\n>- -webkit- : 구글, 사파리\\n- -mox- : 파리어폭스\\n- -ms- : 익스플로러\\n- -o- : 오페라 하우스\\n\\n\\n## 해결\\n``` css\\n$html-fs: 9px;\\n.post-cont {\\n  height: calc((#{$html-fs}*1.5) * 3.2);\\n}\\n```\\n- 해당 코드를 추가하여 텍스트 박스 영역 폰트사이즈(1.5rem) 에 (line-height*2) 를 곱하여 넓이를 반응형으로 지정해주었다.\\n- display: -webkit-box -> block 으로 바꾸니 해결됐다.\\n\\nios 에서 -webkit- 엔진이 왜 적용되지 않는 거지?\\n\\n## ps\\n marked 를 사용할 시 텍스트마다 각각 다른 태그가 지정되어 라인 인식이 힘들어진다. 그래서 marked.js 를 풀어주었고 md 안에 작성된 text 그대로 출력되도록 했다. 그리고 html 태그로 렌더링 되는 문제를 해결하기 위해 replace() 함수로 \\\"<\\\" 와 \\\">\\\" 를 각각 `&lt` `&gt` 로 치환하여 텍스트를 출력시켰다.\\n - 결과는 성공 ! h1 의 # 이나 리스트항목의 - 기호들이 그대로 출력되는 점이 있으나 미리보기에서는 크게 영향이 없을 것이라 생각이 된다.\\n\\n _내일은 반응형 마무리 후 라이트모드 검색버튼 꼭 구현한다.._\\n\\n\\n\\n\";","<template>\n  <header class=\"header\">\n    <div class=\"container\">\n      <router-link :to=\"{ name: 'List' }\" class=\"logo\" @click=\"goTop()\">\n        plinote<span>_</span>\n        <p>프론트 엔드 개발자 진현우의 블로그 입니다.</p>\n      </router-link>\n      <div class=\"user-area\">\n        <button class=\"mode\" @click=\"modeChange\"></button>\n        <div class=\"search-form\" :class=\"{ active: isSearchOn }\">\n          <button class=\"search\" @mouseenter=\"isSearchOn = true\"></button>\n          <input\n            class=\"form-control\"\n            placeholder=\"준비 중입니다.\"\n            @mouseleave=\"isSearchOn = false\"\n          />\n        </div>\n        <button\n          class=\"cate-btn\"\n          :class=\"{ active: isBtnOn }\"\n          @click=\"navOn\"\n        ></button>\n      </div>\n    </div>\n<Snakke />\n\n    <!-- <router-link :to=\"{ name: 'Create' }\" class=\"create-btn\"></router-link> -->\n    <nav class=\"nav\" :class=\"{ active: isNavOn }\">\n      <div class=\"gnb\">\n        <router-link\n          :to=\"{ name: 'Html', params: { cate: 'html' } }\"\n          id=\"html\"\n          class=\"menu\"\n        >\n          <span class=\"category\">HTML</span>\n        </router-link>\n        <router-link\n          :to=\"{ name: 'Css', params: { cate: 'css' } }\"\n          id=\"css\"\n          class=\"menu\"\n        >\n          <span class=\"category\">CSS</span>\n        </router-link>\n        <router-link\n          :to=\"{ name: 'Js', params: { cate: 'js' } }\"\n          id=\"js\"\n          class=\"menu\"\n        >\n          <span class=\"category\">JavaScript</span>\n        </router-link>\n        <router-link\n          :to=\"{ name: 'Vue', params: { cate: 'vue' } }\"\n          id=\"vue\"\n          class=\"menu\"\n        >\n          <span class=\"category\">Vue.js</span>\n        </router-link>\n        <router-link\n          :to=\"{ name: 'Etc', params: { cate: 'etc' } }\"\n          id=\"etc\"\n          class=\"menu\"\n        >\n          <span class=\"category\">etc</span>\n        </router-link>\n      </div>\n    </nav>\n  </header>\n  <div class=\"contents\">\n    <router-view />\n  </div>\n  <footer class=\"footer\">\n    <div class=\"container\">\n      <div class=\"footer-top\">\n        <router-link :to=\"{ name: 'List' }\" class=\"logo\" @click=\"category()\">\n          oplinote<span>_</span>\n        </router-link>\n        <div class=\"contact\">\n          <ul class=\"sns-link\">\n            <li>\n              <a\n                href=\"https://github.com/oplidote\"\n                class=\"link-box\"\n                id=\"github\"\n                target=\"_blank\"\n              ></a>\n            </li>\n            <li>\n              <a\n                href=\"https://www.instagram.com/wlsusn/\"\n                class=\"link-box\"\n                id=\"instagram\"\n                target=\"_blank\"\n              ></a>\n            </li>\n            <li>\n              <a\n                href=\"https://open.kakao.com/o/sxZVj0de\"\n                class=\"link-box\"\n                id=\"kakaotalk\"\n                target=\"_blank\"\n              ></a>\n            </li>\n            <li>\n              <a\n                href=\"mailto:jkr2505@naver.com\"\n                class=\"link-box\"\n                id=\"mail\"\n                target=\"_blank\"\n              ></a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <span class=\"copy\">© 2022 oplinote. All Rights Reserved.</span>\n    </div>\n  </footer>\n</template>\n\n<script>\nimport { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport Snakke from './components/SnakkeLib.vue';\nimport $ from \"jquery\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Snakke,\n  },\n  mounted() {\n    document.addEventListener(\"scroll\", this.headerScroll);\n  },\n  methods: {\n    // header motion\n    headerScroll: function () {\n      const winY = window.scrollY;\n      let $header = $(\".header\");\n      if (winY > 30) {\n        $header.addClass(\"scroll\");\n      } else {\n        $header.removeClass(\"scroll\");\n      }\n    },\n  },\n  setup() {\n    onMounted(() => {\n      router.push({\n        name: \"List\",\n      });\n    });\n    // 날씨 테마\n    // let key = \"89387cb975ca5ede5877cd62d36ec15c\";\n    // const url = `https://api.openweathermap.org/data/2.5/weather?q=seoul&appid=${key}&units=metric`;\n    // fetch(url)\n    // .then((res) => {\n    //   if (res.status === 200) {\n    //           return res.json();\n    //         } else {\n    //           console.error(`HTTP error! status: ${res.status}`);\n    //           alert(\n    //             \"검색에 실패했습니다.조회가 되지 않을 시 지역명을 영문으로 재검색해보세요.\"\n    //           );\n    //         }\n    // })\n    // .then((jsonData) => {\n    //   document.body.classList.add(jsonData.weather[0].main);\n    // })\n    // .catch((err) => {\n    //   console.log(err);\n    // })\n    const router = useRouter();\n    // 변수\n    const isMenuOn = ref(false);\n    const isNavOn = ref(false);\n    const isBtnOn = ref(false);\n    const isSearchOn = ref(false);\n    // all button\n    const navOn = () => {\n      const winY = window.scrollY;\n      console.log(winY);\n      if (isNavOn.value == false) {\n        isNavOn.value = true;\n        isBtnOn.value = true;\n      } else if (isNavOn.value == true) {\n        isNavOn.value = false;\n        isBtnOn.value = false;\n      }\n      isSearchOn.value = false;\n    };\n    const DeleteActive = () => {\n      isNavOn.value = false;\n      isSearchOn.value = false;\n    };\n    // all menu\n    const menuOn = () => {\n      if (isMenuOn.value == false) {\n        isMenuOn.value = true;\n      } else if (isMenuOn.value == true) {\n        isMenuOn.value = false;\n      }\n    };\n    const modeChange = () => {\n      $(\"body\").toggleClass(\"light\");\n    };\n    // 메인 이동\n    const moveHome = () => {\n      $(\".menu\").removeClass(\"active\");\n    };\n    const moveCreate = () => {\n      router.push({\n        name: \"Create\",\n      });\n    };\n    const goTop = () => {\n      window.scroll({ top: 0 });\n    };\n\n    return {\n      useRouter,\n      modeChange,\n      navOn,\n      isNavOn,\n      isBtnOn,\n      menuOn,\n      isMenuOn,\n      isSearchOn,\n      DeleteActive,\n\n      moveHome,\n      moveCreate,\n      goTop,\n    };\n  },\n};\n</script>\n\n<style>\n</style>\n","import { ref, readonly, onUnmounted } from 'vue';\n\nexport default function useSnakke() {\n  const progress = ref(0);\n\n  function updateProgress() {\n    const bodyHeight =\n      document.body.clientHeight - document.documentElement.clientHeight;\n    const scrollPosition = window.scrollY;\n\n    progress.value = scrollPosition / bodyHeight;\n  }\n\n  window.addEventListener('scroll', updateProgress);\n\n  onUnmounted(() => {\n    window.removeEventListener('scroll', updateProgress);\n  });\n\n  return { progress: readonly(progress) };\n}","<template>\n  <progress :value=\"progress\" class=\"snakke-progress\"></progress>\n</template>\n\n<script setup>\nimport useSnakke from \"../services/Snakke.ts\";\nconst { progress } = useSnakke();\n</script>\n\n<style scoped>\nprogress {\n  appearance:none;\n  position: absolute;\n  left: 0;\n  width: 100%;\n  height: 4px;\n  z-index: 9999;\n}\n::-webkit-progress-bar {\n  background-color: transparent;\n}\n::-webkit-progress-value {\n  background-color: #444460;\n  border-top-right-radius: 2px;\n  border-bottom-right-radius: 2px;\n}\n</style>","import script from \"./SnakkeLib.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SnakkeLib.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SnakkeLib.vue?vue&type=style&index=0&id=8b18903c&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jinhyunwoo/Documents/jinhyunwoo/project/vue/blog/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8b18903c\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=072d51ce\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/jinhyunwoo/Documents/jinhyunwoo/project/vue/blog/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\" id=\"list-view\">\n    <div class=\"list-header\">\n      <h2 :class=\"`${cate}`\">{{ listTitle(cate, \"header\") }}</h2>\n      <span\n        ><em>{{ cateCount(cate) }}</em> posts</span\n      >\n    </div>\n    <div class=\"list-wrap\">\n      <div class=\"post\" v-for=\"(item, index) in posts\" :key=\"item.id\">\n        <div class=\"post-box\" v-show=\"cateSort(item.category)\">\n          <div class=\"click-area\" @click=\"movePost(item.id, cate)\"></div>\n          <div class=\"post-cate\" v-if=\"cate == '' ? true : false\">\n            <span>{{ listTitle(item.category) }}</span>\n          </div>\n          <div class=\"post-date\">{{ postDate(item.date) }}</div>\n          <div class=\"post-tit\">\n            <h2>{{ item.title }}</h2>\n          </div>\n\n          <div v-html=\"markText(index + 1)\" class=\"post-cont\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostsList from \"@/assets/data.json\";\nimport _ from \"lodash\";\nimport { useRouter } from \"vue-router\";\n\n// markdown 파일을 위한 라이브러리\nimport { marked } from \"marked\";\nimport prism from \"prismjs\";\nimport \"prismjs/themes/prism-okaidia.css\";\n\nexport default {\n  components: {},\n  props: {\n    cate: {\n      type: String,\n      default: \"\",\n    },\n  },\n  computed: {\n    posts() {\n      return PostsList.post.map((items) => {\n        return items;\n      });\n    },\n  },\n  methods: {\n    update: _.debounce(function (e) {\n      this.input = e.target.value;\n    }, 300),\n  },\n\n  setup(props) {\n    const router = useRouter();\n    // marked.js 옵션\n    marked.setOptions({\n      gfm: true,\n      breaks: false, // 줄바꿈 한번을 <br> 로 취급할 지\n    });\n    const postDate = (_createDate) => {\n      let date1 = new Date(); // 현재 일자\n      let date2 = new Date(_createDate); // 파일 생성일자\n      // 일자의 격차 구하기\n      const diffDate = date1.getTime() - date2.getTime();\n      // 분 단위로 변경\n      let diffMin = parseInt(diffDate / (1000 * 60));\n      let diffDay = parseInt(diffMin / 1440);\n      let diffWeek = parseInt(diffDay / 7);\n      let diffMon = parseInt(diffDay / 30);\n      let diffYear = parseInt(diffDay / 365);\n      // 게시일자 별 멘트\n      if (diffMin < 1) {\n        return \"방금 전\";\n      } else if (diffMin < 60) {\n        // 1 시간 이내\n        return diffMin + \"분 전\";\n      } else if (diffMin > 60 && diffMin < 1440) {\n        // 1시간 ~ 24시간 이내 60m ~ 1440m\n        return parseInt(diffMin / 60) + \"시간 전\";\n      } else if (1 <= diffDay && diffDay < 3) {\n        // 하루 전 ~ 이틀 전\n        if (2 <= diffDay) return \"이틀 전\";\n        else return \"하루 전\";\n      } else if (3 <= diffDay && 7 > diffDay) {\n        // 3일 전 ~ 1주일 이내\n        return diffDay + \"일 전\";\n      } else if (1 <= diffWeek && 4 > diffWeek) {\n        // n주 전\n        return diffWeek + \"주 전\";\n      } else if (1 <= diffMon && 12 > diffMon) {\n        // 1년 이내\n        return diffMon + \"개월 전\";\n      }\n      return diffYear + \"년 전\";\n    };\n    const markText = (_index) => {\n      const text = require(`raw-loader!../posts/post${_index}.md`)\n        .default.replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/#|_|`/g, \"\");\n      return text;\n    };\n    // data.json 특정 테이블 출력\n    // console.log(PostsList.post.map((_c) => {\n    // var arr = {};\n    // arr[_c.id] = _c.category;\n    // return arr;\n    // }));\n    const cateList = [\"html\", \"css\", \"js\", \"vue\", \"etc\"];\n    const cateSort = (_c) => {\n      if (cateList.indexOf(_c) == -1) _c = \"etc\";\n      // 게시글의 카테고리와 사용자가 선택한 카테고리(props.cate)가\n      // 일치하면 출력\n      if (props.cate == _c) {\n        return true;\n      }\n      // 사용자가 카테고리를 선택하지 않으면 모두 출력\n      else if (props.cate == \"\") {\n        return true;\n      }\n    };\n    const listTitle = (_c, _type) => {\n      if (_c == \"\" && _type == \"header\") {\n        return \"Total\";\n      } else if (_c == \"html\") {\n        return \"HTML\";\n      } else if (_c == \"css\") {\n        return \"CSS\";\n      } else if (_c == \"js\") {\n        return \"JavaScript\";\n      } else if (_c == \"vue\") {\n        return \"Vue.js\";\n      } else if (_c == \"etc\") {\n        return \"기타\";\n      } else {\n        return _c;\n      }\n    };\n    const cateCount = (_c) => {\n      let count = 0;\n      if (_c == \"\") {\n        count = PostsList.post.length;\n      } else {\n        for (let i = 0; i < PostsList.post.length; i++) {\n          if (PostsList.post[i].category == _c) {\n            count++;\n          }\n        }\n      }\n      return count;\n    };\n    const movePost = (_id, _c) => {\n      router.push({\n        name: \"Post\",\n        params: {\n          id: _id,\n          cate: _c,\n        },\n      });\n    };\n    return {\n      cateSort,\n      listTitle,\n      cateCount,\n      markText,\n      prism,\n      postDate,\n      movePost,\n    };\n  },\n};\n</script>\n\n<style>\n</style>","import { render } from \"./ListView.vue?vue&type=template&id=7cc4a0fc\"\nimport script from \"./ListView.vue?vue&type=script&lang=js\"\nexport * from \"./ListView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/jinhyunwoo/Documents/jinhyunwoo/project/vue/blog/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"container\" id=\"create-post\">\n      <form @submit.prevent=\"onSubmit\">\n        <input\n          class=\"title\"\n          type=\"text\"\n          placeholder=\"제목\"\n          v-model=\"post.title\"\n          autofocus\n        />\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"10\"\n          placeholder=\"내용을 입력하세요\"\n          v-model=\"post.body\"\n        ></textarea>\n        <div class=\"category\">\n          <span class=\"cate-tit\">Category</span>\n          <div class=\"cate-box\">\n            <input type=\"checkbox\" id=\"html\" />\n            <label for=\"html\"\n              ><span class=\"plus\">+</span><span class=\"minus\"></span>HTML</label\n            >\n            <input type=\"checkbox\" id=\"css\" />\n            <label for=\"css\"\n              ><span class=\"plus\">+</span><span class=\"minus\"></span>CSS</label\n            >\n            <input type=\"checkbox\" id=\"js\" />\n            <label for=\"js\"\n              ><span class=\"plus\">+</span\n              ><span class=\"minus\"></span>Javascript</label\n            >\n            <input type=\"checkbox\" id=\"vue\" />\n            <label for=\"vue\"\n              ><span class=\"plus\">+</span\n              ><span class=\"minus\"></span>Vue.js</label\n            >\n            <input type=\"checkbox\" id=\"etc\" />\n            <label for=\"etc\"\n              ><span class=\"plus\">+</span><span class=\"minus\"></span>etc</label\n            >\n          </div>\n        </div>\n        <div class=\"submit-box clearfix\">\n          <button type=\"button\" class=\"cancel\" @click=\"moveHome\"></button>\n          <button type=\"submit\" class=\"done\">Done</button>\n        </div>\n      </form>\n    </div>\n</template>\n\n<script>\nimport { reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nexport default {\n  components: {},\n  setup() {\n    const router = useRouter();\n\n    const post = reactive({\n      title: \"\",\n      body: \"\",\n    });\n    const moveHome = () => {\n      router.push({\n        name: \"Home\",\n      });\n    };\n    const onSubmit = () => {\n      if (!post.title) {\n        return;\n      }\n      if (!post.body) {\n        return;\n      }\n    };\n    return {\n      post,\n      moveHome,\n      onSubmit,\n    };\n  },\n};\n</script>\n\n<style>\n</style>","import { render } from \"./CreatePost.vue?vue&type=template&id=221954fb\"\nimport script from \"./CreatePost.vue?vue&type=script&lang=js\"\nexport * from \"./CreatePost.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/jinhyunwoo/Documents/jinhyunwoo/project/vue/blog/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"container\" id=\"post-view\">\n\n    <div class=\"post-wrap\">\n      <div class=\"post-control\"></div>\n      <div class=\"post-header\">\n        <h1 class=\"post-tit\">\n          <span>{{ post.title }}</span>\n        </h1>\n        <div class=\"post-cate\">\n          <span>{{ cateText(post.category) }}</span>\n        </div>\n        <span class=\"post-date\">{{ postDate(post.date) }}</span>\n      </div>\n      <div class=\"post-contents\">\n        <div v-html=\"markText(post.id)\" class=\"post-txt\"></div>\n      </div>\n      <div class=\"post-footer\">\n        <div class=\"post-author\">\n          <span class=\"author-name\"><strong>진현우</strong>hyunwoo Jin</span>\n          <div class=\"author-info\">\n            <p>주니어 프론트엔드 개발자 진현우입니다.</p>\n            <p>A junior front-end developer.</p>\n          </div>\n        </div>\n        <!-- <div class=\"author-contact\">\n          <b>contact</b>\n          <p>\n            <span>kakao : </span>\n            <a href=\"https://open.kakao.com/o/sxZVj0de\"\n              target=\"_blank\"\n              >https://open.kakao.com/o/sxZVj0de</a>\n          </p>\n          <p>\n            <span>github : </span>\n            <a href=\"https://github.com/oplidote\"\n              target=\"_blank\"\n              >https://github.com/oplidote</a>\n          </p>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostsList from \"@/assets/data.json\";\nimport { marked } from \"marked\";\nimport prism from \"prismjs\";\n\nexport default {\n  components: {\n  },\n  props: {\n    id: Number,\n  },\n  computed: {\n    post(props) {\n      return PostsList.post[props.id - 1];\n    },\n  },\n  setup() {\n    // 진입 시 최상단으로 이동\n    window.scroll({ top: 0 });\n    const postDate = (_createDate) => {\n      let date1 = new Date(); // 현재 일자\n      let date2 = new Date(_createDate); // 파일 생성일자\n      // 일자의 격차 구하기\n      const diffDate = date1.getTime() - date2.getTime();\n      // 분 단위로 변경\n      let diffMin = parseInt(diffDate / (1000 * 60));\n      let diffDay = parseInt(diffMin / 1440);\n      let diffWeek = parseInt(diffDay / 7);\n      let diffMon = parseInt(diffDay / 30);\n      let diffYear = parseInt(diffDay / 365);\n      // 게시일자 별 멘트\n      if (diffMin < 1) {\n        return \"방금 전\";\n      } else if (diffMin < 60) {\n        // 1 시간 이내\n        return diffMin + \"분 전\";\n      } else if (diffMin > 60 && diffMin < 1440) {\n        // 1시간 ~ 24시간 이내 60m ~ 1440m\n        return parseInt(diffMin / 60) + \"시간 전\";\n      } else if (1 <= diffDay && diffDay < 3) {\n        // 하루 전 ~ 이틀 전\n        if (2 <= diffDay) return \"이틀 전\";\n        else return \"하루 전\";\n      } else if (3 <= diffDay && 7 > diffDay) {\n        // 3일 전 ~ 1주일 이내\n        return diffDay + \"일 전\";\n      } else if (1 <= diffWeek && 4 > diffWeek) {\n        // n주 전\n        return diffWeek + \"주 전\";\n      } else if (1 <= diffMon && 12 > diffMon) {\n        // 1년 이내\n        return diffMon + \"개월 전\";\n      }\n      return diffYear + \"년 전\";\n    };\n    // 카테고리 text 출력\n    const cateText = (_c) => {\n      if (_c == \"html\") {\n        return \"HTML\";\n      } else if (_c == \"css\") {\n        return \"CSS\";\n      } else if (_c == \"js\") {\n        return \"JavaScript\";\n      } else if (_c == \"vue\") {\n        return \"Vue.js\";\n      } else if (_c == \"etc\") {\n        return \"기타\";\n      } else {\n        return _c;\n      }\n    };\n    // 게시물 내용\n    const markText = (_index) => {\n      return marked.parse(\n        require(`raw-loader!../posts/post${_index}.md`).default\n      );\n    };\n    const renderer = new marked.Renderer();\n    const linkRenderer = renderer.link;\n    renderer.link = (href, title, text) => {\n      const html = linkRenderer.call(renderer, href, title, text);\n      return html.replace(/^<a /, '<a target=\"_blank\" rel=\"nofollow\" ');\n    };\n    // marked.js 옵션\n    marked.setOptions({\n      renderer: renderer,\n      // prism.js 속성 부여\n      highlight: (code, lang) => {\n        if (prism.languages[lang]) {\n          return prism.highlight(code, prism.languages[lang], lang);\n        } else {\n          return code;\n        }\n      },\n      gfm: true,\n      breaks: true,\n    });\n    return {\n      postDate,\n      cateText,\n      markText,\n    };\n  },\n};\n</script>\n\n<style>\n</style>","import { render } from \"./PostView.vue?vue&type=template&id=4a583dca\"\nimport script from \"./PostView.vue?vue&type=script&lang=js\"\nexport * from \"./PostView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/jinhyunwoo/Documents/jinhyunwoo/project/vue/blog/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from \"vue-router\";\nimport ListView from '@/components/ListView.vue';\nimport CreatePost from '@/components/CreatePost.vue';\nimport PostView from '@/components/PostView.vue';\n// vue 에서 화면을 연결하는 경우 활용\nconst router = createRouter({\n    history: createWebHistory(),\n    routes: [\n        {\n            path: '/oplinote',\n            name: 'List',\n            component: ListView,\n            props: true,\n        },\n        {\n            path: '/oplinote/html',\n            name: 'Html',\n            component: ListView,\n            props: true,\n        },\n        {\n            path: '/oplinote/css',\n            name: 'Css',\n            component: ListView,\n            props: true,\n        },\n        {\n            path: '/oplinote/js',\n            name: 'Js',\n            component: ListView,\n            props: true,\n        },\n        {\n            path: '/oplinote/vue',\n            name: 'Vue',\n            component: ListView,\n            props: true,\n        },\n        {\n            path: '/oplinote/etc',\n            name: 'Etc',\n            component: ListView,\n            props: true,\n        },\n        {\n            path: '/oplinote/create',\n            name: 'Create',\n            component: CreatePost,\n        },\n        {\n            path: '/oplinote/post',\n            name: 'Post',\n            component: PostView,\n            props: true,\n        },\n        \n    ]\n});\n\nexport default router;","import {\n  createStore\n} from 'vuex'\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  getters: {},\n  modules : {},\n});\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router/index'\nimport store from './store/index'\nimport './style/style.scss'\ncreateApp(App).use(router).use(store).mount('#app')","var map = {\n\t\"./post1.md\": 798,\n\t\"./post10.md\": 932,\n\t\"./post11.md\": 270,\n\t\"./post12.md\": 233,\n\t\"./post13.md\": 38,\n\t\"./post14.md\": 821,\n\t\"./post15.md\": 279,\n\t\"./post16.md\": 443,\n\t\"./post17.md\": 773,\n\t\"./post18.md\": 665,\n\t\"./post19.md\": 67,\n\t\"./post2.md\": 682,\n\t\"./post20.md\": 822,\n\t\"./post21.md\": 833,\n\t\"./post22.md\": 965,\n\t\"./post23.md\": 588,\n\t\"./post3.md\": 924,\n\t\"./post4.md\": 753,\n\t\"./post5.md\": 664,\n\t\"./post6.md\": 282,\n\t\"./post7.md\": 555,\n\t\"./post8.md\": 375,\n\t\"./post9.md\": 636\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 703;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkblog\"] = self[\"webpackChunkblog\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(309); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","_createElementVNode","_createVNode","_component_router_link","to","name","onClick","$setup","_hoisted_5","active","onMouseenter","placeholder","onMouseleave","_component_Snakke","params","cate","id","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_component_router_view","_ctx","_hoisted_19","_hoisted_20","useSnakke","progress","updateProgress","bodyHeight","document","body","clientHeight","documentElement","scrollPosition","window","scrollY","value","addEventListener","removeEventListener","__exports__","components","Snakke","mounted","this","headerScroll","methods","winY","$header","$","addClass","removeClass","setup","onMounted","router","push","useRouter","isMenuOn","ref","isNavOn","isBtnOn","isSearchOn","navOn","console","log","DeleteActive","menuOn","modeChange","toggleClass","moveHome","moveCreate","goTop","scroll","top","render","_createElementBlock","$props","_toDisplayString","_Fragment","_renderList","$options","item","index","key","category","date","title","innerHTML","props","type","String","default","computed","posts","PostsList","items","update","_","e","input","target","marked","gfm","breaks","postDate","_createDate","date1","Date","date2","diffDate","getTime","diffMin","parseInt","diffDay","diffWeek","diffMon","diffYear","markText","_index","text","require","replace","cateList","cateSort","_c","indexOf","listTitle","_type","cateCount","count","i","movePost","_id","prism","onSubmit","$event","autofocus","cols","rows","_hoisted_2","_hoisted_4","post","reactive","_hoisted_3","Number","cateText","renderer","linkRenderer","link","href","html","call","highlight","code","lang","createRouter","history","createWebHistory","routes","path","component","ListView","CreatePost","PostView","createStore","state","mutations","actions","getters","modules","createApp","App","use","store","mount","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","length","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","defineProperty","enumerable","get","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}